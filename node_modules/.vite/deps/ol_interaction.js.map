{
  "version": 3,
  "sources": ["../../ol/interaction/DblClickDragZoom.js", "../../ol/interaction/DragAndDrop.js", "../../ol/interaction/DragRotateAndZoom.js", "../../ol/interaction/Extent.js", "../../ol/interaction/Link.js", "../../ol/interaction/Select.js", "../../ol/events/SnapEvent.js", "../../ol/interaction/Snap.js", "../../ol/interaction/Translate.js"],
  "sourcesContent": ["/**\r\n * @module ol/interaction/DblClickDragZoom\r\n */\r\nimport Interaction from './Interaction.js';\r\nimport MapBrowserEventType from '../MapBrowserEventType.js';\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {number} [duration=400] Animation duration in milliseconds. *\r\n * @property {number} [delta=1] The zoom delta applied on move of one pixel. *\r\n * @property {function(boolean):boolean} [stopDown]\r\n * Should the down event be propagated to other interactions, or should be\r\n * stopped?\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Allows the user to zoom the map by double tap/click then drag up/down\r\n * with one finger/left mouse.\r\n * @api\r\n */\r\nclass DblClickDragZoom extends Interaction {\r\n  /**\r\n   * @param {Options} [opt_options] Options.\r\n   */\r\n  constructor(opt_options) {\r\n    const options = opt_options ? opt_options : {};\r\n\r\n    super(\r\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options),\r\n    );\r\n\r\n    if (options.stopDown) {\r\n      this.stopDown = options.stopDown;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.scaleDeltaByPixel_ = options.delta ? options.delta : 0.01;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\r\n\r\n    /**\r\n     * @type {boolean}\r\n     * @private\r\n     */\r\n    this.handlingDownUpSequence_ = false;\r\n\r\n    /**\r\n     * @type {boolean}\r\n     * @private\r\n     */\r\n    this.handlingDoubleDownSequence_ = false;\r\n\r\n    /**\r\n     * @type {ReturnType<typeof setTimeout>}\r\n     * @private\r\n     */\r\n    this.doubleTapTimeoutId_ = undefined;\r\n\r\n    /**\r\n     * @type {!Object<string, PointerEvent>}\r\n     * @private\r\n     */\r\n    this.trackedPointers_ = {};\r\n\r\n    /**\r\n     * @type {Array<PointerEvent>}\r\n     * @protected\r\n     */\r\n    this.targetPointers = [];\r\n  }\r\n\r\n  /**\r\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent  map browser event} and may call into\r\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\r\n   * detected.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n   * @return {boolean} `false` to stop event propagation.\r\n   * @api\r\n   * @override\r\n   */\r\n  handleEvent(mapBrowserEvent) {\r\n    if (!mapBrowserEvent.originalEvent) {\r\n      return true;\r\n    }\r\n\r\n    let stopEvent = false;\r\n    this.updateTrackedPointers_(mapBrowserEvent);\r\n    if (this.handlingDownUpSequence_) {\r\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\r\n        this.handleDragEvent(mapBrowserEvent);\r\n        // prevent page scrolling during dragging\r\n        mapBrowserEvent.originalEvent.preventDefault();\r\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\r\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\r\n        this.handlingDownUpSequence_ = handledUp;\r\n      }\r\n    } else {\r\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\r\n        if (this.handlingDoubleDownSequence_) {\r\n          this.handlingDoubleDownSequence_ = false;\r\n          const handled = this.handleDownEvent(mapBrowserEvent);\r\n          this.handlingDownUpSequence_ = handled;\r\n          stopEvent = this.stopDown(handled);\r\n        } else {\r\n          stopEvent = this.stopDown(false);\r\n          this.waitForDblTap_();\r\n        }\r\n      }\r\n    }\r\n    return !stopEvent;\r\n  }\r\n\r\n  /**\r\n   * Handle pointer drag events.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\r\n   */\r\n  handleDragEvent(mapBrowserEvent) {\r\n    let scaleDelta = 1.0;\r\n\r\n    const touch0 = this.targetPointers[0];\r\n    const touch1 = this.down_.originalEvent;\r\n    const distance = touch0.clientY - touch1.clientY;\r\n\r\n    if (this.lastDistance_ !== undefined) {\r\n      scaleDelta =\r\n        1 - (this.lastDistance_ - distance) * this.scaleDeltaByPixel_;\r\n    }\r\n    this.lastDistance_ = distance;\r\n\r\n    if (scaleDelta != 1.0) {\r\n      this.lastScaleDelta_ = scaleDelta;\r\n    }\r\n\r\n    // scale, bypass the resolution constraint\r\n    const map = mapBrowserEvent.map;\r\n    const view = map.getView();\r\n    map.render();\r\n    view.adjustResolutionInternal(scaleDelta);\r\n  }\r\n\r\n  /**\r\n   * Handle pointer down events.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\r\n   * @return {boolean} If the event was consumed.\r\n   */\r\n  handleDownEvent(mapBrowserEvent) {\r\n    if (this.targetPointers.length == 1) {\r\n      const map = mapBrowserEvent.map;\r\n      this.anchor_ = null;\r\n      this.lastDistance_ = undefined;\r\n      this.lastScaleDelta_ = 1;\r\n      this.down_ = mapBrowserEvent;\r\n      if (!this.handlingDownUpSequence_) {\r\n        map.getView().beginInteraction();\r\n      }\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Handle pointer up events zooming out.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\r\n   * @return {boolean} If the event was consumed.\r\n   */\r\n  handleUpEvent(mapBrowserEvent) {\r\n    if (this.targetPointers.length == 0) {\r\n      const map = mapBrowserEvent.map;\r\n      const view = map.getView();\r\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\r\n      view.endInteraction(this.duration_, direction);\r\n      this.handlingDownUpSequence_ = false;\r\n      this.handlingDoubleDownSequence_ = false;\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * This function is used to determine if \"down\" events should be propagated\r\n   * to other interactions or should be stopped.\r\n   * @param {boolean} handled Was the event handled by the interaction?\r\n   * @return {boolean} Should the `down` event be stopped?\r\n   */\r\n  stopDown(handled) {\r\n    return handled;\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\r\n   * @private\r\n   */\r\n  updateTrackedPointers_(mapBrowserEvent) {\r\n    if (isPointerDraggingEvent(mapBrowserEvent)) {\r\n      const event = mapBrowserEvent.originalEvent;\r\n\r\n      const id = event.pointerId.toString();\r\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\r\n        delete this.trackedPointers_[id];\r\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\r\n        this.trackedPointers_[id] = event;\r\n      } else if (id in this.trackedPointers_) {\r\n        // update only when there was a pointerdown event for this pointer\r\n        this.trackedPointers_[id] = event;\r\n      }\r\n      this.targetPointers = Object.values(this.trackedPointers_);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Wait the second double finger tap.\r\n   * @private\r\n   */\r\n  waitForDblTap_() {\r\n    if (this.doubleTapTimeoutId_ !== undefined) {\r\n      // double-click\r\n      clearTimeout(this.doubleTapTimeoutId_);\r\n      this.doubleTapTimeoutId_ = undefined;\r\n    } else {\r\n      this.handlingDoubleDownSequence_ = true;\r\n      this.doubleTapTimeoutId_ = setTimeout(\r\n        this.endInteraction_.bind(this),\r\n        250,\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  endInteraction_() {\r\n    this.handlingDoubleDownSequence_ = false;\r\n    this.doubleTapTimeoutId_ = undefined;\r\n  }\r\n}\r\n\r\n/**\r\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\r\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\r\n *     or pointerup event.\r\n */\r\nfunction isPointerDraggingEvent(mapBrowserEvent) {\r\n  const type = mapBrowserEvent.type;\r\n  return (\r\n    type === MapBrowserEventType.POINTERDOWN ||\r\n    type === MapBrowserEventType.POINTERDRAG ||\r\n    type === MapBrowserEventType.POINTERUP\r\n  );\r\n}\r\n\r\nexport default DblClickDragZoom;\r\n", "/**\r\n * @module ol/interaction/DragAndDrop\r\n */\r\n// FIXME should handle all geo-referenced data, not just vector data\r\n\r\nimport Event from '../events/Event.js';\r\nimport EventType from '../events/EventType.js';\r\nimport Interaction from './Interaction.js';\r\nimport {TRUE} from '../functions.js';\r\nimport {get as getProjection, getUserProjection} from '../proj.js';\r\nimport {listen, unlistenByKey} from '../events.js';\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {Array<typeof import(\"../format/Feature.js\").default|import(\"../format/Feature.js\").default>} [formatConstructors] Format constructors\r\n * (and/or formats pre-constructed with options).\r\n * @property {import(\"../source/Vector.js\").default} [source] Optional vector source where features will be added.  If a source is provided\r\n * all existing features will be removed and new features will be added when\r\n * they are dropped on the target.  If you want to add features to a vector\r\n * source without removing the existing features (append only), instead of\r\n * providing the source option listen for the \"addfeatures\" event.\r\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Target projection. By default, the map's view's projection is used.\r\n * @property {HTMLElement} [target] The element that is used as the drop target, default is the viewport element.\r\n */\r\n\r\n/**\r\n * @enum {string}\r\n */\r\nconst DragAndDropEventType = {\r\n  /**\r\n   * Triggered when features are added\r\n   * @event DragAndDropEvent#addfeatures\r\n   * @api\r\n   */\r\n  ADD_FEATURES: 'addfeatures',\r\n};\r\n\r\n/**\r\n * @classdesc\r\n * Events emitted by {@link module:ol/interaction/DragAndDrop~DragAndDrop} instances are instances\r\n * of this type.\r\n */\r\nexport class DragAndDropEvent extends Event {\r\n  /**\r\n   * @param {DragAndDropEventType} type Type.\r\n   * @param {File} file File.\r\n   * @param {Array<import(\"../Feature.js\").default>} [features] Features.\r\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\r\n   */\r\n  constructor(type, file, features, projection) {\r\n    super(type);\r\n\r\n    /**\r\n     * The features parsed from dropped data.\r\n     * @type {Array<import(\"../Feature.js\").FeatureLike>|undefined}\r\n     * @api\r\n     */\r\n    this.features = features;\r\n\r\n    /**\r\n     * The dropped file.\r\n     * @type {File}\r\n     * @api\r\n     */\r\n    this.file = file;\r\n\r\n    /**\r\n     * The feature projection.\r\n     * @type {import(\"../proj/Projection.js\").default|undefined}\r\n     * @api\r\n     */\r\n    this.projection = projection;\r\n  }\r\n}\r\n\r\n/***\r\n * @template Return\r\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\r\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\r\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\r\n *   import(\"../Observable\").OnSignature<'addfeatures', DragAndDropEvent, Return> &\r\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\r\n *     'change:active'|'addfeatures', Return>} DragAndDropOnSignature\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Handles input of vector data by drag and drop.\r\n *\r\n * @api\r\n *\r\n * @fires DragAndDropEvent\r\n */\r\nclass DragAndDrop extends Interaction {\r\n  /**\r\n   * @param {Options} [options] Options.\r\n   */\r\n  constructor(options) {\r\n    options = options ? options : {};\r\n\r\n    super({\r\n      handleEvent: TRUE,\r\n    });\r\n\r\n    /***\r\n     * @type {DragAndDropOnSignature<import(\"../events\").EventsKey>}\r\n     */\r\n    this.on;\r\n\r\n    /***\r\n     * @type {DragAndDropOnSignature<import(\"../events\").EventsKey>}\r\n     */\r\n    this.once;\r\n\r\n    /***\r\n     * @type {DragAndDropOnSignature<void>}\r\n     */\r\n    this.un;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.readAsBuffer_ = false;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<import(\"../format/Feature.js\").default>}\r\n     */\r\n    this.formats_ = [];\r\n    const formatConstructors = options.formatConstructors\r\n      ? options.formatConstructors\r\n      : [];\r\n    for (let i = 0, ii = formatConstructors.length; i < ii; ++i) {\r\n      let format = formatConstructors[i];\r\n      if (typeof format === 'function') {\r\n        format = new format();\r\n      }\r\n      this.formats_.push(format);\r\n      this.readAsBuffer_ =\r\n        this.readAsBuffer_ || format.getType() === 'arraybuffer';\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../proj/Projection.js\").default}\r\n     */\r\n    this.projection_ = options.projection\r\n      ? getProjection(options.projection)\r\n      : null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {?Array<import(\"../events.js\").EventsKey>}\r\n     */\r\n    this.dropListenKeys_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../source/Vector.js\").default}\r\n     */\r\n    this.source_ = options.source || null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {HTMLElement|null}\r\n     */\r\n    this.target = options.target ? options.target : null;\r\n  }\r\n\r\n  /**\r\n   * @param {File} file File.\r\n   * @param {Event} event Load event.\r\n   * @private\r\n   */\r\n  handleResult_(file, event) {\r\n    const result = event.target.result;\r\n    const map = this.getMap();\r\n    let projection = this.projection_;\r\n    if (!projection) {\r\n      projection = getUserProjection();\r\n      if (!projection) {\r\n        const view = map.getView();\r\n        projection = view.getProjection();\r\n      }\r\n    }\r\n\r\n    let text;\r\n    const formats = this.formats_;\r\n    for (let i = 0, ii = formats.length; i < ii; ++i) {\r\n      const format = formats[i];\r\n      let input = result;\r\n      if (this.readAsBuffer_ && format.getType() !== 'arraybuffer') {\r\n        if (text === undefined) {\r\n          text = new TextDecoder().decode(result);\r\n        }\r\n        input = text;\r\n      }\r\n      const features = this.tryReadFeatures_(format, input, {\r\n        featureProjection: projection,\r\n      });\r\n      if (features && features.length > 0) {\r\n        if (this.source_) {\r\n          this.source_.clear();\r\n          this.source_.addFeatures(features);\r\n        }\r\n        this.dispatchEvent(\r\n          new DragAndDropEvent(\r\n            DragAndDropEventType.ADD_FEATURES,\r\n            file,\r\n            features,\r\n            projection,\r\n          ),\r\n        );\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  registerListeners_() {\r\n    const map = this.getMap();\r\n    if (map) {\r\n      const dropArea = this.target ? this.target : map.getViewport();\r\n      this.dropListenKeys_ = [\r\n        listen(dropArea, EventType.DROP, this.handleDrop, this),\r\n        listen(dropArea, EventType.DRAGENTER, this.handleStop, this),\r\n        listen(dropArea, EventType.DRAGOVER, this.handleStop, this),\r\n        listen(dropArea, EventType.DROP, this.handleStop, this),\r\n      ];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Activate or deactivate the interaction.\r\n   * @param {boolean} active Active.\r\n   * @observable\r\n   * @api\r\n   * @override\r\n   */\r\n  setActive(active) {\r\n    if (!this.getActive() && active) {\r\n      this.registerListeners_();\r\n    }\r\n    if (this.getActive() && !active) {\r\n      this.unregisterListeners_();\r\n    }\r\n    super.setActive(active);\r\n  }\r\n\r\n  /**\r\n   * Remove the interaction from its current map and attach it to the new map.\r\n   * Subclasses may set up event handlers to get notified about changes to\r\n   * the map here.\r\n   * @param {import(\"../Map.js\").default} map Map.\r\n   * @override\r\n   */\r\n  setMap(map) {\r\n    this.unregisterListeners_();\r\n    super.setMap(map);\r\n    if (this.getActive()) {\r\n      this.registerListeners_();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../format/Feature.js\").default} format Format.\r\n   * @param {string} text Text.\r\n   * @param {import(\"../format/Feature.js\").ReadOptions} options Read options.\r\n   * @private\r\n   * @return {Array<import(\"../Feature.js\").default>} Features.\r\n   */\r\n  tryReadFeatures_(format, text, options) {\r\n    try {\r\n      return (\r\n        /** @type {Array<import(\"../Feature.js\").default>} */\r\n        (format.readFeatures(text, options))\r\n      );\r\n    } catch (e) {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  unregisterListeners_() {\r\n    if (this.dropListenKeys_) {\r\n      this.dropListenKeys_.forEach(unlistenByKey);\r\n      this.dropListenKeys_ = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {DragEvent} event Event.\r\n   */\r\n  handleDrop(event) {\r\n    const files = event.dataTransfer.files;\r\n    for (let i = 0, ii = files.length; i < ii; ++i) {\r\n      const file = files.item(i);\r\n      const reader = new FileReader();\r\n      reader.addEventListener(\r\n        EventType.LOAD,\r\n        this.handleResult_.bind(this, file),\r\n      );\r\n      if (this.readAsBuffer_) {\r\n        reader.readAsArrayBuffer(file);\r\n      } else {\r\n        reader.readAsText(file);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {DragEvent} event Event.\r\n   */\r\n  handleStop(event) {\r\n    event.stopPropagation();\r\n    event.preventDefault();\r\n    event.dataTransfer.dropEffect = 'copy';\r\n  }\r\n}\r\n\r\nexport default DragAndDrop;\r\n", "/**\r\n * @module ol/interaction/DragRotateAndZoom\r\n */\r\nimport PointerInteraction from './Pointer.js';\r\nimport {mouseOnly, shiftKeyOnly} from '../events/condition.js';\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\r\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\r\n * boolean to indicate whether that event should be handled.\r\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\r\n * @property {number} [duration=400] Animation duration in milliseconds.\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Allows the user to zoom and rotate the map by clicking and dragging\r\n * on the map.  By default, this interaction is limited to when the shift\r\n * key is held down.\r\n *\r\n * This interaction is only supported for mouse devices.\r\n *\r\n * And this interaction is not included in the default interactions.\r\n * @api\r\n */\r\nclass DragRotateAndZoom extends PointerInteraction {\r\n  /**\r\n   * @param {Options} [options] Options.\r\n   */\r\n  constructor(options) {\r\n    options = options ? options : {};\r\n\r\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../events/condition.js\").Condition}\r\n     */\r\n    this.condition_ = options.condition ? options.condition : shiftKeyOnly;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.lastAngle_ = undefined;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.lastMagnitude_ = undefined;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.lastScaleDelta_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\r\n  }\r\n\r\n  /**\r\n   * Handle pointer drag events.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\r\n   * @override\r\n   */\r\n  handleDragEvent(mapBrowserEvent) {\r\n    if (!mouseOnly(mapBrowserEvent)) {\r\n      return;\r\n    }\r\n\r\n    const map = mapBrowserEvent.map;\r\n    const size = map.getSize();\r\n    const offset = mapBrowserEvent.pixel;\r\n    const deltaX = offset[0] - size[0] / 2;\r\n    const deltaY = size[1] / 2 - offset[1];\r\n    const theta = Math.atan2(deltaY, deltaX);\r\n    const magnitude = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\r\n    const view = map.getView();\r\n    if (this.lastAngle_ !== undefined) {\r\n      const angleDelta = this.lastAngle_ - theta;\r\n      view.adjustRotationInternal(angleDelta);\r\n    }\r\n    this.lastAngle_ = theta;\r\n    if (this.lastMagnitude_ !== undefined) {\r\n      view.adjustResolutionInternal(this.lastMagnitude_ / magnitude);\r\n    }\r\n    if (this.lastMagnitude_ !== undefined) {\r\n      this.lastScaleDelta_ = this.lastMagnitude_ / magnitude;\r\n    }\r\n    this.lastMagnitude_ = magnitude;\r\n  }\r\n\r\n  /**\r\n   * Handle pointer up events.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\r\n   * @return {boolean} If the event was consumed.\r\n   * @override\r\n   */\r\n  handleUpEvent(mapBrowserEvent) {\r\n    if (!mouseOnly(mapBrowserEvent)) {\r\n      return true;\r\n    }\r\n\r\n    const map = mapBrowserEvent.map;\r\n    const view = map.getView();\r\n    const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\r\n    view.endInteraction(this.duration_, direction);\r\n    this.lastScaleDelta_ = 0;\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Handle pointer down events.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\r\n   * @return {boolean} If the event was consumed.\r\n   * @override\r\n   */\r\n  handleDownEvent(mapBrowserEvent) {\r\n    if (!mouseOnly(mapBrowserEvent)) {\r\n      return false;\r\n    }\r\n\r\n    if (this.condition_(mapBrowserEvent)) {\r\n      mapBrowserEvent.map.getView().beginInteraction();\r\n      this.lastAngle_ = undefined;\r\n      this.lastMagnitude_ = undefined;\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n}\r\n\r\nexport default DragRotateAndZoom;\r\n", "/**\r\n * @module ol/interaction/Extent\r\n */\r\nimport Event from '../events/Event.js';\r\nimport Feature from '../Feature.js';\r\nimport MapBrowserEventType from '../MapBrowserEventType.js';\r\nimport Point from '../geom/Point.js';\r\nimport PointerInteraction from './Pointer.js';\r\nimport VectorLayer from '../layer/Vector.js';\r\nimport VectorSource from '../source/Vector.js';\r\nimport {always} from '../events/condition.js';\r\nimport {boundingExtent, getArea} from '../extent.js';\r\nimport {\r\n  closestOnSegment,\r\n  distance as coordinateDistance,\r\n  squaredDistance as squaredCoordinateDistance,\r\n  squaredDistanceToSegment,\r\n} from '../coordinate.js';\r\nimport {createEditingStyle} from '../style/Style.js';\r\nimport {fromExtent as polygonFromExtent} from '../geom/Polygon.js';\r\nimport {toUserExtent} from '../proj.js';\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\r\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\r\n * boolean to indicate whether that event should be handled.\r\n * Default is {@link module:ol/events/condition.always}.\r\n * @property {import(\"../extent.js\").Extent} [extent] Initial extent. Defaults to no\r\n * initial extent.\r\n * @property {import(\"../style/Style.js\").StyleLike} [boxStyle]\r\n * Style for the drawn extent box. Defaults to the `Polygon` editing style\r\n * documented in {@link module:ol/style/Style~Style}\r\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\r\n * pointer close enough to a segment or vertex for editing.\r\n * @property {import(\"../style/Style.js\").StyleLike} [pointerStyle]\r\n * Style for the cursor used to draw the extent. Defaults to the `Point` editing style\r\n * documented in {@link module:ol/style/Style~Style}\r\n * @property {boolean} [wrapX=false] Wrap the drawn extent across multiple maps\r\n * in the X direction? Only affects visuals, not functionality.\r\n */\r\n\r\n/**\r\n * @enum {string}\r\n */\r\nconst ExtentEventType = {\r\n  /**\r\n   * Triggered after the extent is changed\r\n   * @event ExtentEvent#extentchanged\r\n   * @api\r\n   */\r\n  EXTENTCHANGED: 'extentchanged',\r\n};\r\n\r\n/**\r\n * @classdesc\r\n * Events emitted by {@link module:ol/interaction/Extent~Extent} instances are\r\n * instances of this type.\r\n */\r\nexport class ExtentEvent extends Event {\r\n  /**\r\n   * @param {import(\"../extent.js\").Extent} extent the new extent\r\n   */\r\n  constructor(extent) {\r\n    super(ExtentEventType.EXTENTCHANGED);\r\n\r\n    /**\r\n     * The current extent.\r\n     * @type {import(\"../extent.js\").Extent}\r\n     * @api\r\n     */\r\n    this.extent = extent;\r\n  }\r\n}\r\n\r\n/***\r\n * @template Return\r\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\r\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\r\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\r\n *   import(\"../Observable\").OnSignature<'extentchanged', ExtentEvent, Return> &\r\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\r\n *     'change:active'|'extentchanged', Return>} ExtentOnSignature\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Allows the user to draw a vector box by clicking and dragging on the map.\r\n * Once drawn, the vector box can be modified by dragging its vertices or edges.\r\n * This interaction is only supported for mouse devices.\r\n *\r\n * @fires ExtentEvent\r\n * @api\r\n */\r\nclass Extent extends PointerInteraction {\r\n  /**\r\n   * @param {Options} [options] Options.\r\n   */\r\n  constructor(options) {\r\n    options = options || {};\r\n\r\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\r\n\r\n    /***\r\n     * @type {ExtentOnSignature<import(\"../events\").EventsKey>}\r\n     */\r\n    this.on;\r\n\r\n    /***\r\n     * @type {ExtentOnSignature<import(\"../events\").EventsKey>}\r\n     */\r\n    this.once;\r\n\r\n    /***\r\n     * @type {ExtentOnSignature<void>}\r\n     */\r\n    this.un;\r\n\r\n    /**\r\n     * Condition\r\n     * @type {import(\"../events/condition.js\").Condition}\r\n     * @private\r\n     */\r\n    this.condition_ = options.condition ? options.condition : always;\r\n\r\n    /**\r\n     * Extent of the drawn box\r\n     * @type {import(\"../extent.js\").Extent}\r\n     * @private\r\n     */\r\n    this.extent_ = null;\r\n\r\n    /**\r\n     * Handler for pointer move events\r\n     * @type {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent|null}\r\n     * @private\r\n     */\r\n    this.pointerHandler_ = null;\r\n\r\n    /**\r\n     * Pixel threshold to snap to extent\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.pixelTolerance_ =\r\n      options.pixelTolerance !== undefined ? options.pixelTolerance : 10;\r\n\r\n    /**\r\n     * Is the pointer snapped to an extent vertex\r\n     * @type {boolean}\r\n     * @private\r\n     */\r\n    this.snappedToVertex_ = false;\r\n\r\n    /**\r\n     * Feature for displaying the visible extent\r\n     * @type {Feature}\r\n     * @private\r\n     */\r\n    this.extentFeature_ = null;\r\n\r\n    /**\r\n     * Feature for displaying the visible pointer\r\n     * @type {Feature<Point>}\r\n     * @private\r\n     */\r\n    this.vertexFeature_ = null;\r\n\r\n    if (!options) {\r\n      options = {};\r\n    }\r\n\r\n    /**\r\n     * Layer for the extentFeature\r\n     * @type {VectorLayer}\r\n     * @private\r\n     */\r\n    this.extentOverlay_ = new VectorLayer({\r\n      source: new VectorSource({\r\n        useSpatialIndex: false,\r\n        wrapX: !!options.wrapX,\r\n      }),\r\n      style: options.boxStyle\r\n        ? options.boxStyle\r\n        : getDefaultExtentStyleFunction(),\r\n      updateWhileAnimating: true,\r\n      updateWhileInteracting: true,\r\n    });\r\n\r\n    /**\r\n     * Layer for the vertexFeature\r\n     * @type {VectorLayer}\r\n     * @private\r\n     */\r\n    this.vertexOverlay_ = new VectorLayer({\r\n      source: new VectorSource({\r\n        useSpatialIndex: false,\r\n        wrapX: !!options.wrapX,\r\n      }),\r\n      style: options.pointerStyle\r\n        ? options.pointerStyle\r\n        : getDefaultPointerStyleFunction(),\r\n      updateWhileAnimating: true,\r\n      updateWhileInteracting: true,\r\n    });\r\n\r\n    if (options.extent) {\r\n      this.setExtent(options.extent);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../pixel.js\").Pixel} pixel cursor location\r\n   * @param {import(\"../Map.js\").default} map map\r\n   * @return {import(\"../coordinate.js\").Coordinate|null} snapped vertex on extent\r\n   * @private\r\n   */\r\n  snapToVertex_(pixel, map) {\r\n    const pixelCoordinate = map.getCoordinateFromPixelInternal(pixel);\r\n    const sortByDistance = function (a, b) {\r\n      return (\r\n        squaredDistanceToSegment(pixelCoordinate, a) -\r\n        squaredDistanceToSegment(pixelCoordinate, b)\r\n      );\r\n    };\r\n    const extent = this.getExtentInternal();\r\n    if (extent) {\r\n      //convert extents to line segments and find the segment closest to pixelCoordinate\r\n      const segments = getSegments(extent);\r\n      segments.sort(sortByDistance);\r\n      const closestSegment = segments[0];\r\n\r\n      let vertex = closestOnSegment(pixelCoordinate, closestSegment);\r\n      const vertexPixel = map.getPixelFromCoordinateInternal(vertex);\r\n\r\n      //if the distance is within tolerance, snap to the segment\r\n      if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\r\n        //test if we should further snap to a vertex\r\n        const pixel1 = map.getPixelFromCoordinateInternal(closestSegment[0]);\r\n        const pixel2 = map.getPixelFromCoordinateInternal(closestSegment[1]);\r\n        const squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\r\n        const squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\r\n        const dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\r\n        this.snappedToVertex_ = dist <= this.pixelTolerance_;\r\n        if (this.snappedToVertex_) {\r\n          vertex =\r\n            squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\r\n        }\r\n        return vertex;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent pointer move event\r\n   * @private\r\n   */\r\n  handlePointerMove_(mapBrowserEvent) {\r\n    const pixel = mapBrowserEvent.pixel;\r\n    const map = mapBrowserEvent.map;\r\n\r\n    let vertex = this.snapToVertex_(pixel, map);\r\n    if (!vertex) {\r\n      vertex = map.getCoordinateFromPixelInternal(pixel);\r\n    }\r\n    this.createOrUpdatePointerFeature_(vertex);\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../extent.js\").Extent} extent extent\r\n   * @return {Feature} extent as featrue\r\n   * @private\r\n   */\r\n  createOrUpdateExtentFeature_(extent) {\r\n    let extentFeature = this.extentFeature_;\r\n\r\n    if (!extentFeature) {\r\n      if (!extent) {\r\n        extentFeature = new Feature({});\r\n      } else {\r\n        extentFeature = new Feature(polygonFromExtent(extent));\r\n      }\r\n      this.extentFeature_ = extentFeature;\r\n      this.extentOverlay_.getSource().addFeature(extentFeature);\r\n    } else {\r\n      if (!extent) {\r\n        extentFeature.setGeometry(undefined);\r\n      } else {\r\n        extentFeature.setGeometry(polygonFromExtent(extent));\r\n      }\r\n    }\r\n    return extentFeature;\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../coordinate.js\").Coordinate} vertex location of feature\r\n   * @return {Feature} vertex as feature\r\n   * @private\r\n   */\r\n  createOrUpdatePointerFeature_(vertex) {\r\n    let vertexFeature = this.vertexFeature_;\r\n    if (!vertexFeature) {\r\n      vertexFeature = new Feature(new Point(vertex));\r\n      this.vertexFeature_ = vertexFeature;\r\n      this.vertexOverlay_.getSource().addFeature(vertexFeature);\r\n    } else {\r\n      const geometry = vertexFeature.getGeometry();\r\n      geometry.setCoordinates(vertex);\r\n    }\r\n    return vertexFeature;\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n   * @return {boolean} `false` to stop event propagation.\r\n   * @override\r\n   */\r\n  handleEvent(mapBrowserEvent) {\r\n    if (!mapBrowserEvent.originalEvent || !this.condition_(mapBrowserEvent)) {\r\n      return true;\r\n    }\r\n    //display pointer (if not dragging)\r\n    if (\r\n      mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\r\n      !this.handlingDownUpSequence\r\n    ) {\r\n      this.handlePointerMove_(mapBrowserEvent);\r\n    }\r\n    //call pointer to determine up/down/drag\r\n    super.handleEvent(mapBrowserEvent);\r\n    //return false to stop propagation\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Handle pointer down events.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\r\n   * @return {boolean} If the event was consumed.\r\n   * @override\r\n   */\r\n  handleDownEvent(mapBrowserEvent) {\r\n    const pixel = mapBrowserEvent.pixel;\r\n    const map = mapBrowserEvent.map;\r\n\r\n    const extent = this.getExtentInternal();\r\n    let vertex = this.snapToVertex_(pixel, map);\r\n\r\n    //find the extent corner opposite the passed corner\r\n    const getOpposingPoint = function (point) {\r\n      let x_ = null;\r\n      let y_ = null;\r\n      if (point[0] == extent[0]) {\r\n        x_ = extent[2];\r\n      } else if (point[0] == extent[2]) {\r\n        x_ = extent[0];\r\n      }\r\n      if (point[1] == extent[1]) {\r\n        y_ = extent[3];\r\n      } else if (point[1] == extent[3]) {\r\n        y_ = extent[1];\r\n      }\r\n      if (x_ !== null && y_ !== null) {\r\n        return [x_, y_];\r\n      }\r\n      return null;\r\n    };\r\n    if (vertex && extent) {\r\n      const x =\r\n        vertex[0] == extent[0] || vertex[0] == extent[2] ? vertex[0] : null;\r\n      const y =\r\n        vertex[1] == extent[1] || vertex[1] == extent[3] ? vertex[1] : null;\r\n\r\n      //snap to point\r\n      if (x !== null && y !== null) {\r\n        this.pointerHandler_ = getPointHandler(getOpposingPoint(vertex));\r\n        //snap to edge\r\n      } else if (x !== null) {\r\n        this.pointerHandler_ = getEdgeHandler(\r\n          getOpposingPoint([x, extent[1]]),\r\n          getOpposingPoint([x, extent[3]]),\r\n        );\r\n      } else if (y !== null) {\r\n        this.pointerHandler_ = getEdgeHandler(\r\n          getOpposingPoint([extent[0], y]),\r\n          getOpposingPoint([extent[2], y]),\r\n        );\r\n      }\r\n      //no snap - new bbox\r\n    } else {\r\n      vertex = map.getCoordinateFromPixelInternal(pixel);\r\n      this.setExtent([vertex[0], vertex[1], vertex[0], vertex[1]]);\r\n      this.pointerHandler_ = getPointHandler(vertex);\r\n    }\r\n    return true; //event handled; start downup sequence\r\n  }\r\n\r\n  /**\r\n   * Handle pointer drag events.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\r\n   * @override\r\n   */\r\n  handleDragEvent(mapBrowserEvent) {\r\n    if (this.pointerHandler_) {\r\n      const pixelCoordinate = mapBrowserEvent.coordinate;\r\n      this.setExtent(this.pointerHandler_(pixelCoordinate));\r\n      this.createOrUpdatePointerFeature_(pixelCoordinate);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle pointer up events.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\r\n   * @return {boolean} If the event was consumed.\r\n   * @override\r\n   */\r\n  handleUpEvent(mapBrowserEvent) {\r\n    this.pointerHandler_ = null;\r\n    //If bbox is zero area, set to null;\r\n    const extent = this.getExtentInternal();\r\n    if (!extent || getArea(extent) === 0) {\r\n      this.setExtent(null);\r\n    }\r\n    return false; //Stop handling downup sequence\r\n  }\r\n\r\n  /**\r\n   * Remove the interaction from its current map and attach it to the new map.\r\n   * Subclasses may set up event handlers to get notified about changes to\r\n   * the map here.\r\n   * @param {import(\"../Map.js\").default} map Map.\r\n   * @override\r\n   */\r\n  setMap(map) {\r\n    this.extentOverlay_.setMap(map);\r\n    this.vertexOverlay_.setMap(map);\r\n    super.setMap(map);\r\n  }\r\n\r\n  /**\r\n   * Returns the current drawn extent in the view projection (or user projection if set)\r\n   *\r\n   * @return {import(\"../extent.js\").Extent} Drawn extent in the view projection.\r\n   * @api\r\n   */\r\n  getExtent() {\r\n    return toUserExtent(\r\n      this.getExtentInternal(),\r\n      this.getMap().getView().getProjection(),\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Returns the current drawn extent in the view projection\r\n   *\r\n   * @return {import(\"../extent.js\").Extent} Drawn extent in the view projection.\r\n   * @api\r\n   */\r\n  getExtentInternal() {\r\n    return this.extent_;\r\n  }\r\n\r\n  /**\r\n   * Manually sets the drawn extent, using the view projection.\r\n   *\r\n   * @param {import(\"../extent.js\").Extent} extent Extent\r\n   * @api\r\n   */\r\n  setExtent(extent) {\r\n    //Null extent means no bbox\r\n    this.extent_ = extent ? extent : null;\r\n    this.createOrUpdateExtentFeature_(extent);\r\n    this.dispatchEvent(new ExtentEvent(this.extent_));\r\n  }\r\n}\r\n\r\n/**\r\n * Returns the default style for the drawn bbox\r\n *\r\n * @return {import(\"../style/Style.js\").StyleFunction} Default Extent style\r\n */\r\nfunction getDefaultExtentStyleFunction() {\r\n  const style = createEditingStyle();\r\n  return function (feature, resolution) {\r\n    return style['Polygon'];\r\n  };\r\n}\r\n\r\n/**\r\n * Returns the default style for the pointer\r\n *\r\n * @return {import(\"../style/Style.js\").StyleFunction} Default pointer style\r\n */\r\nfunction getDefaultPointerStyleFunction() {\r\n  const style = createEditingStyle();\r\n  return function (feature, resolution) {\r\n    return style['Point'];\r\n  };\r\n}\r\n\r\n/**\r\n * @param {import(\"../coordinate.js\").Coordinate} fixedPoint corner that will be unchanged in the new extent\r\n * @return {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent} event handler\r\n */\r\nfunction getPointHandler(fixedPoint) {\r\n  return function (point) {\r\n    return boundingExtent([fixedPoint, point]);\r\n  };\r\n}\r\n\r\n/**\r\n * @param {import(\"../coordinate.js\").Coordinate} fixedP1 first corner that will be unchanged in the new extent\r\n * @param {import(\"../coordinate.js\").Coordinate} fixedP2 second corner that will be unchanged in the new extent\r\n * @return {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent|null} event handler\r\n */\r\nfunction getEdgeHandler(fixedP1, fixedP2) {\r\n  if (fixedP1[0] == fixedP2[0]) {\r\n    return function (point) {\r\n      return boundingExtent([fixedP1, [point[0], fixedP2[1]]]);\r\n    };\r\n  }\r\n  if (fixedP1[1] == fixedP2[1]) {\r\n    return function (point) {\r\n      return boundingExtent([fixedP1, [fixedP2[0], point[1]]]);\r\n    };\r\n  }\r\n  return null;\r\n}\r\n\r\n/**\r\n * @param {import(\"../extent.js\").Extent} extent extent\r\n * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} extent line segments\r\n */\r\nfunction getSegments(extent) {\r\n  return [\r\n    [\r\n      [extent[0], extent[1]],\r\n      [extent[0], extent[3]],\r\n    ],\r\n    [\r\n      [extent[0], extent[3]],\r\n      [extent[2], extent[3]],\r\n    ],\r\n    [\r\n      [extent[2], extent[3]],\r\n      [extent[2], extent[1]],\r\n    ],\r\n    [\r\n      [extent[2], extent[1]],\r\n      [extent[0], extent[1]],\r\n    ],\r\n  ];\r\n}\r\n\r\nexport default Extent;\r\n", "/**\r\n * @module ol/interaction/Link\r\n */\r\nimport EventType from '../events/EventType.js';\r\nimport Interaction from './Interaction.js';\r\nimport MapEventType from '../MapEventType.js';\r\nimport {listen, unlistenByKey} from '../events.js';\r\nimport {toFixed} from '../math.js';\r\n\r\n/**\r\n * @param {number} number A number.\r\n * @return {number} A number with at most 5 decimal places.\r\n */\r\nfunction to5(number) {\r\n  return toFixed(number, 5);\r\n}\r\n\r\n/**\r\n * @param {string} string A string.\r\n * @return {number} A number representing the string.\r\n */\r\nfunction readNumber(string) {\r\n  return parseFloat(string);\r\n}\r\n\r\n/**\r\n * @param {number} number A number.\r\n * @return {string} A string representing the number.\r\n */\r\nfunction writeNumber(number) {\r\n  return to5(number).toString();\r\n}\r\n\r\n/**\r\n * @param {number} a A number.\r\n * @param {number} b A number.\r\n * @return {boolean} The numbers are different.\r\n */\r\nfunction differentNumber(a, b) {\r\n  if (isNaN(a)) {\r\n    return false;\r\n  }\r\n  return a !== readNumber(writeNumber(b));\r\n}\r\n\r\n/**\r\n * @param {Array<number>} a An array of two numbers.\r\n * @param {Array<number>} b An array of two numbers.\r\n * @return {boolean} The arrays are different.\r\n */\r\nfunction differentArray(a, b) {\r\n  return differentNumber(a[0], b[0]) || differentNumber(a[1], b[1]);\r\n}\r\n\r\n/** @typedef {'x'|'y'|'z'|'r'|'l'} Params */\r\n\r\n/**\r\n * @typedef {function(string):void} Callback\r\n */\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {boolean|import('../View.js').AnimationOptions} [animate=true] Animate view transitions.\r\n * @property {Array<Params>} [params=['x', 'y', 'z', 'r', 'l']] Properties to track. Default is to track\r\n * `x` (center x), `y` (center y), `z` (zoom), `r` (rotation) and `l` (layers).\r\n * @property {boolean} [replace=false] Replace the current URL without creating the new entry in browser history.\r\n * By default, changes in the map state result in a new entry being added to the browser history.\r\n * @property {string} [prefix=''] By default, the URL will be updated with search parameters x, y, z, and r.  To\r\n * avoid collisions with existing search parameters that your application uses, you can supply a custom prefix for\r\n * the ones used by this interaction (e.g. 'ol:').\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * An interaction that synchronizes the map state with the URL.\r\n *\r\n * @api\r\n */\r\nclass Link extends Interaction {\r\n  /**\r\n   * @param {Options} [options] Link options.\r\n   */\r\n  constructor(options) {\r\n    super();\r\n\r\n    options = Object.assign(\r\n      {\r\n        animate: true,\r\n        params: ['x', 'y', 'z', 'r', 'l'],\r\n        replace: false,\r\n        prefix: '',\r\n      },\r\n      options || {},\r\n    );\r\n\r\n    let animationOptions;\r\n    if (options.animate === true) {\r\n      animationOptions = {duration: 250};\r\n    } else if (!options.animate) {\r\n      animationOptions = null;\r\n    } else {\r\n      animationOptions = options.animate;\r\n    }\r\n\r\n    /**\r\n     * @type {import('../View.js').AnimationOptions|null}\r\n     * @private\r\n     */\r\n    this.animationOptions_ = animationOptions;\r\n\r\n    /**\r\n     * @type {Object<Params, boolean>}\r\n     * @private\r\n     */\r\n    this.params_ = options.params.reduce((acc, value) => {\r\n      acc[value] = true;\r\n      return acc;\r\n    }, {});\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.replace_ = options.replace;\r\n\r\n    /**\r\n     * @private\r\n     * @type {string}\r\n     */\r\n    this.prefix_ = options.prefix;\r\n\r\n    /**\r\n     * @private\r\n     * @type {!Array<import(\"../events.js\").EventsKey>}\r\n     */\r\n    this.listenerKeys_ = [];\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.initial_ = true;\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    this.updateState_ = this.updateState_.bind(this);\r\n\r\n    /**\r\n     * The tracked parameter callbacks.\r\n     * @private\r\n     * @type {Object<string, Callback>}\r\n     */\r\n    this.trackedCallbacks_ = {};\r\n\r\n    /**\r\n     * The tracked parameter values.\r\n     * @private\r\n     * @type {Object<string, string|null>}\r\n     */\r\n    this.trackedValues_ = {};\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {string} name A parameter name.\r\n   * @return {string} A name with the prefix applied.\r\n   */\r\n  getParamName_(name) {\r\n    if (!this.prefix_) {\r\n      return name;\r\n    }\r\n    return this.prefix_ + name;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {URLSearchParams} params The search params.\r\n   * @param {string} name The unprefixed parameter name.\r\n   * @return {string|null} The parameter value.\r\n   */\r\n  get_(params, name) {\r\n    return params.get(this.getParamName_(name));\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {URLSearchParams} params The search params.\r\n   * @param {string} name The unprefixed parameter name.\r\n   * @param {string} value The param value.\r\n   */\r\n  set_(params, name, value) {\r\n    if (!(name in this.params_)) {\r\n      return;\r\n    }\r\n    params.set(this.getParamName_(name), value);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {URLSearchParams} params The search params.\r\n   * @param {string} name The unprefixed parameter name.\r\n   */\r\n  delete_(params, name) {\r\n    if (!(name in this.params_)) {\r\n      return;\r\n    }\r\n    params.delete(this.getParamName_(name));\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../Map.js\").default|null} map Map.\r\n   * @override\r\n   */\r\n  setMap(map) {\r\n    const oldMap = this.getMap();\r\n    super.setMap(map);\r\n    if (map === oldMap) {\r\n      return;\r\n    }\r\n    if (oldMap) {\r\n      this.unregisterListeners_(oldMap);\r\n    }\r\n    if (map) {\r\n      this.initial_ = true;\r\n      this.updateState_();\r\n      this.registerListeners_(map);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../Map.js\").default} map Map.\r\n   * @private\r\n   */\r\n  registerListeners_(map) {\r\n    this.listenerKeys_.push(\r\n      listen(map, MapEventType.MOVEEND, this.updateUrl_, this),\r\n      listen(map.getLayerGroup(), EventType.CHANGE, this.updateUrl_, this),\r\n      listen(map, 'change:layergroup', this.handleChangeLayerGroup_, this),\r\n    );\r\n\r\n    if (!this.replace_) {\r\n      addEventListener('popstate', this.updateState_);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../Map.js\").default} map Map.\r\n   * @private\r\n   */\r\n  unregisterListeners_(map) {\r\n    for (let i = 0, ii = this.listenerKeys_.length; i < ii; ++i) {\r\n      unlistenByKey(this.listenerKeys_[i]);\r\n    }\r\n    this.listenerKeys_.length = 0;\r\n\r\n    if (!this.replace_) {\r\n      removeEventListener('popstate', this.updateState_);\r\n    }\r\n\r\n    const url = new URL(window.location.href);\r\n    const params = url.searchParams;\r\n    this.delete_(params, 'x');\r\n    this.delete_(params, 'y');\r\n    this.delete_(params, 'z');\r\n    this.delete_(params, 'r');\r\n    this.delete_(params, 'l');\r\n    window.history.replaceState(null, '', url);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  handleChangeLayerGroup_() {\r\n    const map = this.getMap();\r\n    if (!map) {\r\n      return;\r\n    }\r\n    this.unregisterListeners_(map);\r\n    this.registerListeners_(map);\r\n    this.initial_ = true;\r\n    this.updateUrl_();\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  updateState_() {\r\n    const url = new URL(window.location.href);\r\n    const params = url.searchParams;\r\n    for (const key in this.trackedCallbacks_) {\r\n      const value = params.get(key);\r\n      if (key in this.trackedCallbacks_ && value !== this.trackedValues_[key]) {\r\n        this.trackedValues_[key] = value;\r\n        this.trackedCallbacks_[key](value);\r\n      }\r\n    }\r\n\r\n    const map = this.getMap();\r\n    if (!map) {\r\n      return;\r\n    }\r\n    const view = map.getView();\r\n    if (!view) {\r\n      return;\r\n    }\r\n\r\n    let updateView = false;\r\n\r\n    /**\r\n     * @type {import('../View.js').AnimationOptions}\r\n     */\r\n    const viewProperties = {};\r\n\r\n    const zoom = readNumber(this.get_(params, 'z'));\r\n    if ('z' in this.params_ && differentNumber(zoom, view.getZoom())) {\r\n      updateView = true;\r\n      viewProperties.zoom = zoom;\r\n    }\r\n\r\n    const rotation = readNumber(this.get_(params, 'r'));\r\n    if ('r' in this.params_ && differentNumber(rotation, view.getRotation())) {\r\n      updateView = true;\r\n      viewProperties.rotation = rotation;\r\n    }\r\n\r\n    const center = [\r\n      readNumber(this.get_(params, 'x')),\r\n      readNumber(this.get_(params, 'y')),\r\n    ];\r\n    if (\r\n      ('x' in this.params_ || 'y' in this.params_) &&\r\n      differentArray(center, view.getCenter())\r\n    ) {\r\n      updateView = true;\r\n      viewProperties.center = center;\r\n    }\r\n\r\n    if (updateView) {\r\n      if (!this.initial_ && this.animationOptions_) {\r\n        view.animate(Object.assign(viewProperties, this.animationOptions_));\r\n      } else {\r\n        if (viewProperties.center) {\r\n          view.setCenter(viewProperties.center);\r\n        }\r\n        if ('zoom' in viewProperties) {\r\n          view.setZoom(viewProperties.zoom);\r\n        }\r\n        if ('rotation' in viewProperties) {\r\n          view.setRotation(viewProperties.rotation);\r\n        }\r\n      }\r\n    }\r\n\r\n    const layers = map.getAllLayers();\r\n    const layersParam = this.get_(params, 'l');\r\n    if (\r\n      'l' in this.params_ &&\r\n      layersParam &&\r\n      layersParam.length === layers.length\r\n    ) {\r\n      for (let i = 0, ii = layers.length; i < ii; ++i) {\r\n        const value = parseInt(layersParam[i]);\r\n        if (!isNaN(value)) {\r\n          const visible = Boolean(value);\r\n          const layer = layers[i];\r\n          if (layer.getVisible() !== visible) {\r\n            layer.setVisible(visible);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Register a listener for a URL search parameter.  The callback will be called with a new value\r\n   * when the corresponding search parameter changes due to history events (e.g. browser navigation).\r\n   *\r\n   * @param {string} key The URL search parameter.\r\n   * @param {Callback} callback The function to call when the search parameter changes.\r\n   * @return {string|null} The initial value of the search parameter (or null if absent from the URL).\r\n   * @api\r\n   */\r\n  track(key, callback) {\r\n    this.trackedCallbacks_[key] = callback;\r\n    const url = new URL(window.location.href);\r\n    const params = url.searchParams;\r\n    const value = params.get(key);\r\n    this.trackedValues_[key] = value;\r\n    return value;\r\n  }\r\n\r\n  /**\r\n   * Update the URL with a new search parameter value.  If the value is null, it will be\r\n   * deleted from the search parameters.\r\n   *\r\n   * @param {string} key The URL search parameter.\r\n   * @param {string|null} value The updated value (or null to remove it from the URL).\r\n   * @api\r\n   */\r\n  update(key, value) {\r\n    const url = new URL(window.location.href);\r\n    const params = url.searchParams;\r\n    if (value === null) {\r\n      params.delete(key);\r\n    } else {\r\n      params.set(key, value);\r\n    }\r\n    if (key in this.trackedValues_) {\r\n      this.trackedValues_[key] = value;\r\n    }\r\n    this.updateHistory_(url);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  updateUrl_() {\r\n    const map = this.getMap();\r\n    if (!map) {\r\n      return;\r\n    }\r\n    const view = map.getView();\r\n    if (!view) {\r\n      return;\r\n    }\r\n\r\n    const center = view.getCenter();\r\n    const zoom = view.getZoom();\r\n    const rotation = view.getRotation();\r\n\r\n    const layers = map.getAllLayers();\r\n    const visibilities = new Array(layers.length);\r\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\r\n      visibilities[i] = layers[i].getVisible() ? '1' : '0';\r\n    }\r\n\r\n    const url = new URL(window.location.href);\r\n    const params = url.searchParams;\r\n\r\n    this.set_(params, 'x', writeNumber(center[0]));\r\n    this.set_(params, 'y', writeNumber(center[1]));\r\n    this.set_(params, 'z', writeNumber(zoom));\r\n    this.set_(params, 'r', writeNumber(rotation));\r\n    this.set_(params, 'l', visibilities.join(''));\r\n\r\n    this.updateHistory_(url);\r\n    this.initial_ = false;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {URL} url The URL.\r\n   */\r\n  updateHistory_(url) {\r\n    if (url.href !== window.location.href) {\r\n      if (this.initial_ || this.replace_) {\r\n        window.history.replaceState(history.state, '', url);\r\n      } else {\r\n        window.history.pushState(null, '', url);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default Link;\r\n", "/**\r\n * @module ol/interaction/Select\r\n */\r\nimport Collection from '../Collection.js';\r\nimport CollectionEventType from '../CollectionEventType.js';\r\nimport Event from '../events/Event.js';\r\nimport Feature from '../Feature.js';\r\nimport Interaction from './Interaction.js';\r\nimport VectorLayer from '../layer/Vector.js';\r\nimport {TRUE} from '../functions.js';\r\nimport {clear} from '../obj.js';\r\nimport {createEditingStyle} from '../style/Style.js';\r\nimport {extend} from '../array.js';\r\nimport {getUid} from '../util.js';\r\nimport {never, shiftKeyOnly, singleClick} from '../events/condition.js';\r\n\r\n/**\r\n * @enum {string}\r\n */\r\nconst SelectEventType = {\r\n  /**\r\n   * Triggered when feature(s) has been (de)selected.\r\n   * @event SelectEvent#select\r\n   * @api\r\n   */\r\n  SELECT: 'select',\r\n};\r\n\r\n/**\r\n * A function that takes a {@link module:ol/Feature~Feature} and returns `true` if the feature may be\r\n * selected or `false` otherwise.\r\n * @typedef {function(import(\"../Feature.js\").default, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>):boolean} FilterFunction\r\n */\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"../events/condition.js\").Condition} [addCondition] A function\r\n * that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\r\n * boolean to indicate whether that event should be handled.\r\n * By default, this is {@link module:ol/events/condition.never}. Use this if you\r\n * want to use different events for add and remove instead of `toggle`.\r\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\r\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\r\n * boolean to indicate whether that event should be handled. This is the event\r\n * for the selected features as a whole. By default, this is\r\n * {@link module:ol/events/condition.singleClick}. Clicking on a feature selects that\r\n * feature and removes any that were in the selection. Clicking outside any\r\n * feature removes all from the selection.\r\n * See `toggle`, `add`, `remove` options for adding/removing extra features to/\r\n * from the selection.\r\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} [layers]\r\n * A list of layers from which features should be selected. Alternatively, a\r\n * filter function can be provided. The function will be called for each layer\r\n * in the map and should return `true` for layers that you want to be\r\n * selectable. If the option is absent, all visible layers will be considered\r\n * selectable.\r\n * @property {import(\"../style/Style.js\").StyleLike|null} [style]\r\n * Style for the selected features. By default the default edit style is used\r\n * (see {@link module:ol/style/Style~Style}). Set to `null` if this interaction should not apply\r\n * any style changes for selected features.\r\n * If set to a falsey value, the selected feature's style will not change.\r\n * @property {import(\"../events/condition.js\").Condition} [removeCondition] A function\r\n * that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\r\n * boolean to indicate whether that event should be handled.\r\n * By default, this is {@link module:ol/events/condition.never}. Use this if you\r\n * want to use different events for add and remove instead of `toggle`.\r\n * @property {import(\"../events/condition.js\").Condition} [toggleCondition] A function\r\n * that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\r\n * boolean to indicate whether that event should be handled. This is in addition\r\n * to the `condition` event. By default,\r\n * {@link module:ol/events/condition.shiftKeyOnly}, i.e. pressing `shift` as\r\n * well as the `condition` event, adds that feature to the current selection if\r\n * it is not currently selected, and removes it if it is. See `add` and `remove`\r\n * if you want to use different events instead of a toggle.\r\n * @property {boolean} [multi=false] A boolean that determines if the default\r\n * behaviour should select only single features or all (overlapping) features at\r\n * the clicked map position. The default of `false` means single select.\r\n * @property {Collection<Feature>} [features]\r\n * Collection where the interaction will place selected features. Optional. If\r\n * not set the interaction will create a collection. In any case the collection\r\n * used by the interaction is returned by\r\n * {@link module:ol/interaction/Select~Select#getFeatures}.\r\n * @property {FilterFunction} [filter] A function\r\n * that takes a {@link module:ol/Feature~Feature} and a\r\n * {@link module:ol/layer/Layer~Layer} and returns `true` if the feature may be\r\n * selected or `false` otherwise.\r\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside\r\n * the radius around the given position will be checked for features.\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Events emitted by {@link module:ol/interaction/Select~Select} instances are instances of\r\n * this type.\r\n */\r\nexport class SelectEvent extends Event {\r\n  /**\r\n   * @param {SelectEventType} type The event type.\r\n   * @param {Array<import(\"../Feature.js\").default>} selected Selected features.\r\n   * @param {Array<import(\"../Feature.js\").default>} deselected Deselected features.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Associated\r\n   *     {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\r\n   */\r\n  constructor(type, selected, deselected, mapBrowserEvent) {\r\n    super(type);\r\n\r\n    /**\r\n     * Selected features array.\r\n     * @type {Array<import(\"../Feature.js\").default>}\r\n     * @api\r\n     */\r\n    this.selected = selected;\r\n\r\n    /**\r\n     * Deselected features array.\r\n     * @type {Array<import(\"../Feature.js\").default>}\r\n     * @api\r\n     */\r\n    this.deselected = deselected;\r\n\r\n    /**\r\n     * Associated {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\r\n     * @type {import(\"../MapBrowserEvent.js\").default}\r\n     * @api\r\n     */\r\n    this.mapBrowserEvent = mapBrowserEvent;\r\n  }\r\n}\r\n\r\n/**\r\n * Original feature styles to reset to when features are no longer selected.\r\n * @type {Object<number, import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction>}\r\n */\r\nconst originalFeatureStyles = {};\r\n\r\n/***\r\n * @template Return\r\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\r\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\r\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\r\n *   import(\"../Observable\").OnSignature<'select', SelectEvent, Return> &\r\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\r\n *     'change:active'|'select', Return>} SelectOnSignature\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Interaction for selecting vector features. By default, selected features are\r\n * styled differently, so this interaction can be used for visual highlighting,\r\n * as well as selecting features for other actions, such as modification or\r\n * output. There are three ways of controlling which features are selected:\r\n * using the browser event as defined by the `condition` and optionally the\r\n * `toggle`, `add`/`remove`, and `multi` options; a `layers` filter; and a\r\n * further feature filter using the `filter` option.\r\n *\r\n * @fires SelectEvent\r\n * @api\r\n */\r\nclass Select extends Interaction {\r\n  /**\r\n   * @param {Options} [options] Options.\r\n   */\r\n  constructor(options) {\r\n    super();\r\n\r\n    /***\r\n     * @type {SelectOnSignature<import(\"../events\").EventsKey>}\r\n     */\r\n    this.on;\r\n\r\n    /***\r\n     * @type {SelectOnSignature<import(\"../events\").EventsKey>}\r\n     */\r\n    this.once;\r\n\r\n    /***\r\n     * @type {SelectOnSignature<void>}\r\n     */\r\n    this.un;\r\n\r\n    options = options ? options : {};\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    this.boundAddFeature_ = this.addFeature_.bind(this);\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    this.boundRemoveFeature_ = this.removeFeature_.bind(this);\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../events/condition.js\").Condition}\r\n     */\r\n    this.condition_ = options.condition ? options.condition : singleClick;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../events/condition.js\").Condition}\r\n     */\r\n    this.addCondition_ = options.addCondition ? options.addCondition : never;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../events/condition.js\").Condition}\r\n     */\r\n    this.removeCondition_ = options.removeCondition\r\n      ? options.removeCondition\r\n      : never;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../events/condition.js\").Condition}\r\n     */\r\n    this.toggleCondition_ = options.toggleCondition\r\n      ? options.toggleCondition\r\n      : shiftKeyOnly;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.multi_ = options.multi ? options.multi : false;\r\n\r\n    /**\r\n     * @private\r\n     * @type {FilterFunction}\r\n     */\r\n    this.filter_ = options.filter ? options.filter : TRUE;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction|null}\r\n     */\r\n    this.style_ =\r\n      options.style !== undefined ? options.style : getDefaultStyleFunction();\r\n\r\n    /**\r\n     * @private\r\n     * @type {Collection<Feature>}\r\n     */\r\n    this.features_ = options.features || new Collection();\r\n\r\n    /** @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} */\r\n    let layerFilter;\r\n    if (options.layers) {\r\n      if (typeof options.layers === 'function') {\r\n        layerFilter = options.layers;\r\n      } else {\r\n        const layers = options.layers;\r\n        layerFilter = function (layer) {\r\n          return layers.includes(layer);\r\n        };\r\n      }\r\n    } else {\r\n      layerFilter = TRUE;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean}\r\n     */\r\n    this.layerFilter_ = layerFilter;\r\n\r\n    /**\r\n     * An association between selected feature (key)\r\n     * and layer (value)\r\n     * @private\r\n     * @type {Object<string, import(\"../layer/Layer.js\").default>}\r\n     */\r\n    this.featureLayerAssociation_ = {};\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../Feature.js\").default} feature Feature.\r\n   * @param {import(\"../layer/Layer.js\").default} layer Layer.\r\n   * @private\r\n   */\r\n  addFeatureLayerAssociation_(feature, layer) {\r\n    this.featureLayerAssociation_[getUid(feature)] = layer;\r\n  }\r\n\r\n  /**\r\n   * Get the selected features.\r\n   * @return {Collection<Feature>} Features collection.\r\n   * @api\r\n   */\r\n  getFeatures() {\r\n    return this.features_;\r\n  }\r\n\r\n  /**\r\n   * Returns the Hit-detection tolerance.\r\n   * @return {number} Hit tolerance in pixels.\r\n   * @api\r\n   */\r\n  getHitTolerance() {\r\n    return this.hitTolerance_;\r\n  }\r\n\r\n  /**\r\n   * Returns the associated {@link module:ol/layer/Vector~VectorLayer vector layer} of\r\n   * a selected feature.\r\n   * @param {import(\"../Feature.js\").default} feature Feature\r\n   * @return {import('../layer/Vector.js').default} Layer.\r\n   * @api\r\n   */\r\n  getLayer(feature) {\r\n    return /** @type {import('../layer/Vector.js').default} */ (\r\n      this.featureLayerAssociation_[getUid(feature)]\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Hit-detection tolerance. Pixels inside the radius around the given position\r\n   * will be checked for features.\r\n   * @param {number} hitTolerance Hit tolerance in pixels.\r\n   * @api\r\n   */\r\n  setHitTolerance(hitTolerance) {\r\n    this.hitTolerance_ = hitTolerance;\r\n  }\r\n\r\n  /**\r\n   * Remove the interaction from its current map, if any,  and attach it to a new\r\n   * map, if any. Pass `null` to just remove the interaction from the current map.\r\n   * @param {import(\"../Map.js\").default|null} map Map.\r\n   * @api\r\n   * @override\r\n   */\r\n  setMap(map) {\r\n    const currentMap = this.getMap();\r\n    if (currentMap && this.style_) {\r\n      this.features_.forEach(this.restorePreviousStyle_.bind(this));\r\n    }\r\n    super.setMap(map);\r\n    if (map) {\r\n      this.features_.addEventListener(\r\n        CollectionEventType.ADD,\r\n        this.boundAddFeature_,\r\n      );\r\n      this.features_.addEventListener(\r\n        CollectionEventType.REMOVE,\r\n        this.boundRemoveFeature_,\r\n      );\r\n\r\n      if (this.style_) {\r\n        this.features_.forEach(this.applySelectedStyle_.bind(this));\r\n      }\r\n    } else {\r\n      this.features_.removeEventListener(\r\n        CollectionEventType.ADD,\r\n        this.boundAddFeature_,\r\n      );\r\n      this.features_.removeEventListener(\r\n        CollectionEventType.REMOVE,\r\n        this.boundRemoveFeature_,\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../Collection.js\").CollectionEvent<Feature>} evt Event.\r\n   * @private\r\n   */\r\n  addFeature_(evt) {\r\n    const feature = evt.element;\r\n    if (this.style_) {\r\n      this.applySelectedStyle_(feature);\r\n    }\r\n    if (!this.getLayer(feature)) {\r\n      const layer = /** @type {VectorLayer} */ (\r\n        this.getMap()\r\n          .getAllLayers()\r\n          .find(function (layer) {\r\n            if (\r\n              layer instanceof VectorLayer &&\r\n              layer.getSource() &&\r\n              layer.getSource().hasFeature(feature)\r\n            ) {\r\n              return layer;\r\n            }\r\n          })\r\n      );\r\n      if (layer) {\r\n        this.addFeatureLayerAssociation_(feature, layer);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../Collection.js\").CollectionEvent<Feature>} evt Event.\r\n   * @private\r\n   */\r\n  removeFeature_(evt) {\r\n    if (this.style_) {\r\n      this.restorePreviousStyle_(evt.element);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @return {import(\"../style/Style.js\").StyleLike|null} Select style.\r\n   */\r\n  getStyle() {\r\n    return this.style_;\r\n  }\r\n\r\n  /**\r\n   * @param {Feature} feature Feature\r\n   * @private\r\n   */\r\n  applySelectedStyle_(feature) {\r\n    const key = getUid(feature);\r\n    if (!(key in originalFeatureStyles)) {\r\n      originalFeatureStyles[key] = feature.getStyle();\r\n    }\r\n    feature.setStyle(this.style_);\r\n  }\r\n\r\n  /**\r\n   * @param {Feature} feature Feature\r\n   * @private\r\n   */\r\n  restorePreviousStyle_(feature) {\r\n    const interactions = this.getMap().getInteractions().getArray();\r\n    for (let i = interactions.length - 1; i >= 0; --i) {\r\n      const interaction = interactions[i];\r\n      if (\r\n        interaction !== this &&\r\n        interaction instanceof Select &&\r\n        interaction.getStyle() &&\r\n        interaction.getFeatures().getArray().lastIndexOf(feature) !== -1\r\n      ) {\r\n        feature.setStyle(interaction.getStyle());\r\n        return;\r\n      }\r\n    }\r\n\r\n    const key = getUid(feature);\r\n    feature.setStyle(originalFeatureStyles[key]);\r\n    delete originalFeatureStyles[key];\r\n  }\r\n\r\n  /**\r\n   * @param {Feature} feature Feature.\r\n   * @private\r\n   */\r\n  removeFeatureLayerAssociation_(feature) {\r\n    delete this.featureLayerAssociation_[getUid(feature)];\r\n  }\r\n\r\n  /**\r\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may change the\r\n   * selected state of features.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n   * @return {boolean} `false` to stop event propagation.\r\n   * @override\r\n   */\r\n  handleEvent(mapBrowserEvent) {\r\n    if (!this.condition_(mapBrowserEvent)) {\r\n      return true;\r\n    }\r\n    const add = this.addCondition_(mapBrowserEvent);\r\n    const remove = this.removeCondition_(mapBrowserEvent);\r\n    const toggle = this.toggleCondition_(mapBrowserEvent);\r\n    const set = !add && !remove && !toggle;\r\n    const map = mapBrowserEvent.map;\r\n    const features = this.getFeatures();\r\n\r\n    /**\r\n     * @type {Array<Feature>}\r\n     */\r\n    const deselected = [];\r\n\r\n    /**\r\n     * @type {Array<Feature>}\r\n     */\r\n    const selected = [];\r\n\r\n    if (set) {\r\n      // Replace the currently selected feature(s) with the feature(s) at the\r\n      // pixel, or clear the selected feature(s) if there is no feature at\r\n      // the pixel.\r\n      clear(this.featureLayerAssociation_);\r\n      map.forEachFeatureAtPixel(\r\n        mapBrowserEvent.pixel,\r\n        /**\r\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\r\n         * @return {boolean|undefined} Continue to iterate over the features.\r\n         */\r\n        (feature, layer) => {\r\n          if (!(feature instanceof Feature) || !this.filter_(feature, layer)) {\r\n            return;\r\n          }\r\n          this.addFeatureLayerAssociation_(feature, layer);\r\n          selected.push(feature);\r\n          return !this.multi_;\r\n        },\r\n        {\r\n          layerFilter: this.layerFilter_,\r\n          hitTolerance: this.hitTolerance_,\r\n        },\r\n      );\r\n      for (let i = features.getLength() - 1; i >= 0; --i) {\r\n        const feature = features.item(i);\r\n        const index = selected.indexOf(feature);\r\n        if (index > -1) {\r\n          // feature is already selected\r\n          selected.splice(index, 1);\r\n        } else {\r\n          features.remove(feature);\r\n          deselected.push(feature);\r\n        }\r\n      }\r\n      if (selected.length !== 0) {\r\n        features.extend(selected);\r\n      }\r\n    } else {\r\n      // Modify the currently selected feature(s).\r\n      map.forEachFeatureAtPixel(\r\n        mapBrowserEvent.pixel,\r\n        /**\r\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\r\n         * @return {boolean|undefined} Continue to iterate over the features.\r\n         */\r\n        (feature, layer) => {\r\n          if (!(feature instanceof Feature) || !this.filter_(feature, layer)) {\r\n            return;\r\n          }\r\n          if ((add || toggle) && !features.getArray().includes(feature)) {\r\n            this.addFeatureLayerAssociation_(feature, layer);\r\n            selected.push(feature);\r\n          } else if (\r\n            (remove || toggle) &&\r\n            features.getArray().includes(feature)\r\n          ) {\r\n            deselected.push(feature);\r\n            this.removeFeatureLayerAssociation_(feature);\r\n          }\r\n          return !this.multi_;\r\n        },\r\n        {\r\n          layerFilter: this.layerFilter_,\r\n          hitTolerance: this.hitTolerance_,\r\n        },\r\n      );\r\n      for (let j = deselected.length - 1; j >= 0; --j) {\r\n        features.remove(deselected[j]);\r\n      }\r\n      features.extend(selected);\r\n    }\r\n    if (selected.length > 0 || deselected.length > 0) {\r\n      this.dispatchEvent(\r\n        new SelectEvent(\r\n          SelectEventType.SELECT,\r\n          selected,\r\n          deselected,\r\n          mapBrowserEvent,\r\n        ),\r\n      );\r\n    }\r\n    return true;\r\n  }\r\n}\r\n\r\n/**\r\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\r\n */\r\nfunction getDefaultStyleFunction() {\r\n  const styles = createEditingStyle();\r\n  extend(styles['Polygon'], styles['LineString']);\r\n  extend(styles['GeometryCollection'], styles['LineString']);\r\n\r\n  return function (feature) {\r\n    if (!feature.getGeometry()) {\r\n      return null;\r\n    }\r\n    return styles[feature.getGeometry().getType()];\r\n  };\r\n}\r\n\r\nexport default Select;\r\n", "/**\r\n * @module ol/events/SnapEvent\r\n */\r\nimport Event from './Event.js';\r\n\r\n/**\r\n * @enum {string}\r\n */\r\nexport const SnapEventType = {\r\n  /**\r\n   * Triggered upon snapping to vertex or edge\r\n   * @event SnapEvent#snap\r\n   * @api\r\n   */\r\n  SNAP: 'snap',\r\n};\r\n\r\n/**\r\n * @classdesc\r\n * Events emitted by {@link module:ol/interaction/Snap~Snap} instances are instances of this\r\n */\r\nexport class SnapEvent extends Event {\r\n  /**\r\n   * @param {SnapEventType} type Type.\r\n   * @param {Object} options Options.\r\n   * @param {import(\"../coordinate.js\").Coordinate} options.vertex The snapped vertex.\r\n   * @param {import(\"../coordinate.js\").Coordinate} options.vertexPixel The pixel of the snapped vertex.\r\n   * @param {import(\"../Feature.js\").default} options.feature The feature being snapped.\r\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|null} options.segment Segment, or `null` if snapped to a vertex.\r\n   */\r\n  constructor(type, options) {\r\n    super(type);\r\n    /**\r\n     * The Map coordinate of the snapped point.\r\n     * @type {import(\"../coordinate.js\").Coordinate}\r\n     * @api\r\n     */\r\n    this.vertex = options.vertex;\r\n    /**\r\n     * The Map pixel of the snapped point.\r\n     * @type {Array<number>&Array<number>}\r\n     * @api\r\n     */\r\n    this.vertexPixel = options.vertexPixel;\r\n    /**\r\n     * The feature closest to the snapped point.\r\n     * @type {import(\"../Feature.js\").default<import(\"../geom/Geometry.js\").default>}\r\n     * @api\r\n     */\r\n    this.feature = options.feature;\r\n    /**\r\n     * The segment closest to the snapped point, if snapped to a segment.\r\n     * @type {Array<import(\"../coordinate.js\").Coordinate>|null}\r\n     * @api\r\n     */\r\n    this.segment = options.segment;\r\n  }\r\n}\r\n", "/**\r\n * @module ol/interaction/Snap\r\n */\r\nimport CollectionEventType from '../CollectionEventType.js';\r\nimport EventType from '../events/EventType.js';\r\nimport PointerInteraction from './Pointer.js';\r\nimport RBush from '../structs/RBush.js';\r\nimport VectorEventType from '../source/VectorEventType.js';\r\nimport {FALSE, TRUE} from '../functions.js';\r\nimport {SnapEvent, SnapEventType} from '../events/SnapEvent.js';\r\nimport {boundingExtent, buffer, createEmpty} from '../extent.js';\r\nimport {\r\n  closestOnCircle,\r\n  closestOnSegment,\r\n  squaredDistance,\r\n} from '../coordinate.js';\r\nimport {fromCircle} from '../geom/Polygon.js';\r\nimport {\r\n  fromUserCoordinate,\r\n  getUserProjection,\r\n  toUserCoordinate,\r\n  toUserExtent,\r\n} from '../proj.js';\r\nimport {getUid} from '../util.js';\r\nimport {listen, unlistenByKey} from '../events.js';\r\n\r\n/**\r\n * @typedef {Object} Result\r\n * @property {import(\"../coordinate.js\").Coordinate|null} vertex Vertex.\r\n * @property {import(\"../pixel.js\").Pixel|null} vertexPixel VertexPixel.\r\n * @property {import(\"../Feature.js\").default|null} feature Feature.\r\n * @property {Array<import(\"../coordinate.js\").Coordinate>|null} segment Segment, or `null` if snapped to a vertex.\r\n */\r\n\r\n/**\r\n * @typedef {Object} SegmentData\r\n * @property {import(\"../Feature.js\").default} feature Feature.\r\n * @property {Array<import(\"../coordinate.js\").Coordinate>} segment Segment.\r\n */\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} [features] Snap to these features. Either this option or source should be provided.\r\n * @property {boolean} [edge=true] Snap to edges.\r\n * @property {boolean} [vertex=true] Snap to vertices.\r\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the pointer close enough to a segment or\r\n * vertex for snapping.\r\n * @property {import(\"../source/Vector.js\").default} [source] Snap to features from this source. Either this option or features should be provided\r\n */\r\n\r\n/**\r\n * @param  {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default>} evt Event.\r\n * @return {import(\"../Feature.js\").default|null} Feature.\r\n */\r\nfunction getFeatureFromEvent(evt) {\r\n  if (\r\n    /** @type {import(\"../source/Vector.js\").VectorSourceEvent} */ (evt).feature\r\n  ) {\r\n    return /** @type {import(\"../source/Vector.js\").VectorSourceEvent} */ (evt)\r\n      .feature;\r\n  }\r\n  if (\r\n    /** @type {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default>} */ (\r\n      evt\r\n    ).element\r\n  ) {\r\n    return /** @type {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default>} */ (\r\n      evt\r\n    ).element;\r\n  }\r\n  return null;\r\n}\r\n\r\nconst tempSegment = [];\r\n\r\n/***\r\n * @template Return\r\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\r\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\r\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\r\n *   import(\"../Observable\").OnSignature<'snap', SnapEvent, Return> &\r\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\r\n *     'change:active'|'snap', Return>} SnapOnSignature\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Handles snapping of vector features while modifying or drawing them.  The\r\n * features can come from a {@link module:ol/source/Vector~VectorSource} or {@link module:ol/Collection~Collection}\r\n * Any interaction object that allows the user to interact\r\n * with the features using the mouse can benefit from the snapping, as long\r\n * as it is added before.\r\n *\r\n * The snap interaction modifies map browser event `coordinate` and `pixel`\r\n * properties to force the snap to occur to any interaction that uses them.\r\n *\r\n * Example:\r\n *\r\n *     import Snap from 'ol/interaction/Snap.js';\r\n *\r\n *     const snap = new Snap({\r\n *       source: source\r\n *     });\r\n *\r\n *     map.addInteraction(snap);\r\n *\r\n * @fires SnapEvent\r\n * @api\r\n */\r\nclass Snap extends PointerInteraction {\r\n  /**\r\n   * @param {Options} [options] Options.\r\n   */\r\n  constructor(options) {\r\n    options = options ? options : {};\r\n\r\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\r\n      options\r\n    );\r\n\r\n    if (!pointerOptions.handleDownEvent) {\r\n      pointerOptions.handleDownEvent = TRUE;\r\n    }\r\n\r\n    if (!pointerOptions.stopDown) {\r\n      pointerOptions.stopDown = FALSE;\r\n    }\r\n\r\n    super(pointerOptions);\r\n\r\n    /***\r\n     * @type {SnapOnSignature<import(\"../events\").EventsKey>}\r\n     */\r\n    this.on;\r\n\r\n    /***\r\n     * @type {SnapOnSignature<import(\"../events\").EventsKey>}\r\n     */\r\n    this.once;\r\n\r\n    /***\r\n     * @type {SnapOnSignature<void>}\r\n     */\r\n    this.un;\r\n\r\n    /**\r\n     * @type {import(\"../source/Vector.js\").default|null}\r\n     * @private\r\n     */\r\n    this.source_ = options.source ? options.source : null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.vertex_ = options.vertex !== undefined ? options.vertex : true;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.edge_ = options.edge !== undefined ? options.edge : true;\r\n\r\n    /**\r\n     * @type {import(\"../Collection.js\").default<import(\"../Feature.js\").default>|null}\r\n     * @private\r\n     */\r\n    this.features_ = options.features ? options.features : null;\r\n\r\n    /**\r\n     * @type {Array<import(\"../events.js\").EventsKey>}\r\n     * @private\r\n     */\r\n    this.featuresListenerKeys_ = [];\r\n\r\n    /**\r\n     * @type {Object<string, import(\"../events.js\").EventsKey>}\r\n     * @private\r\n     */\r\n    this.featureChangeListenerKeys_ = {};\r\n\r\n    /**\r\n     * Extents are preserved so indexed segment can be quickly removed\r\n     * when its feature geometry changes\r\n     * @type {Object<string, import(\"../extent.js\").Extent>}\r\n     * @private\r\n     */\r\n    this.indexedFeaturesExtents_ = {};\r\n\r\n    /**\r\n     * If a feature geometry changes while a pointer drag|move event occurs, the\r\n     * feature doesn't get updated right away.  It will be at the next 'pointerup'\r\n     * event fired.\r\n     * @type {!Object<string, import(\"../Feature.js\").default>}\r\n     * @private\r\n     */\r\n    this.pendingFeatures_ = {};\r\n\r\n    /**\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.pixelTolerance_ =\r\n      options.pixelTolerance !== undefined ? options.pixelTolerance : 10;\r\n\r\n    /**\r\n     * Segment RTree for each layer\r\n     * @type {import(\"../structs/RBush.js\").default<SegmentData>}\r\n     * @private\r\n     */\r\n    this.rBush_ = new RBush();\r\n\r\n    /**\r\n     * @const\r\n     * @private\r\n     * @type {Object<string, function(Array<Array<import('../coordinate.js').Coordinate>>, import(\"../geom/Geometry.js\").default): void>}\r\n     */\r\n    this.GEOMETRY_SEGMENTERS_ = {\r\n      'Point': this.segmentPointGeometry_.bind(this),\r\n      'LineString': this.segmentLineStringGeometry_.bind(this),\r\n      'LinearRing': this.segmentLineStringGeometry_.bind(this),\r\n      'Polygon': this.segmentPolygonGeometry_.bind(this),\r\n      'MultiPoint': this.segmentMultiPointGeometry_.bind(this),\r\n      'MultiLineString': this.segmentMultiLineStringGeometry_.bind(this),\r\n      'MultiPolygon': this.segmentMultiPolygonGeometry_.bind(this),\r\n      'GeometryCollection': this.segmentGeometryCollectionGeometry_.bind(this),\r\n      'Circle': this.segmentCircleGeometry_.bind(this),\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Add a feature to the collection of features that we may snap to.\r\n   * @param {import(\"../Feature.js\").default} feature Feature.\r\n   * @param {boolean} [register] Whether to listen to the feature change or not\r\n   *     Defaults to `true`.\r\n   * @api\r\n   */\r\n  addFeature(feature, register) {\r\n    register = register !== undefined ? register : true;\r\n    const feature_uid = getUid(feature);\r\n    const geometry = feature.getGeometry();\r\n    if (geometry) {\r\n      const segmenter = this.GEOMETRY_SEGMENTERS_[geometry.getType()];\r\n      if (segmenter) {\r\n        this.indexedFeaturesExtents_[feature_uid] =\r\n          geometry.getExtent(createEmpty());\r\n        const segments =\r\n          /** @type {Array<Array<import('../coordinate.js').Coordinate>>} */ ([]);\r\n        segmenter(segments, geometry);\r\n        if (segments.length === 1) {\r\n          this.rBush_.insert(boundingExtent(segments[0]), {\r\n            feature: feature,\r\n            segment: segments[0],\r\n          });\r\n        } else if (segments.length > 1) {\r\n          const extents = segments.map((s) => boundingExtent(s));\r\n          const segmentsData = segments.map((segment) => ({\r\n            feature: feature,\r\n            segment: segment,\r\n          }));\r\n          this.rBush_.load(extents, segmentsData);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (register) {\r\n      this.featureChangeListenerKeys_[feature_uid] = listen(\r\n        feature,\r\n        EventType.CHANGE,\r\n        this.handleFeatureChange_,\r\n        this,\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @return {import(\"../Collection.js\").default<import(\"../Feature.js\").default>|Array<import(\"../Feature.js\").default>} Features.\r\n   * @private\r\n   */\r\n  getFeatures_() {\r\n    /** @type {import(\"../Collection.js\").default<import(\"../Feature.js\").default>|Array<import(\"../Feature.js\").default>} */\r\n    let features;\r\n    if (this.features_) {\r\n      features = this.features_;\r\n    } else if (this.source_) {\r\n      features = this.source_.getFeatures();\r\n    }\r\n    return features;\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Map browser event.\r\n   * @return {boolean} `false` to stop event propagation.\r\n   * @api\r\n   * @override\r\n   */\r\n  handleEvent(evt) {\r\n    const result = this.snapTo(evt.pixel, evt.coordinate, evt.map);\r\n    if (result) {\r\n      evt.coordinate = result.vertex.slice(0, 2);\r\n      evt.pixel = result.vertexPixel;\r\n      this.dispatchEvent(\r\n        new SnapEvent(SnapEventType.SNAP, {\r\n          vertex: evt.coordinate,\r\n          vertexPixel: evt.pixel,\r\n          feature: result.feature,\r\n          segment: result.segment,\r\n        }),\r\n      );\r\n    }\r\n    return super.handleEvent(evt);\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default>} evt Event.\r\n   * @private\r\n   */\r\n  handleFeatureAdd_(evt) {\r\n    const feature = getFeatureFromEvent(evt);\r\n    if (feature) {\r\n      this.addFeature(feature);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default>} evt Event.\r\n   * @private\r\n   */\r\n  handleFeatureRemove_(evt) {\r\n    const feature = getFeatureFromEvent(evt);\r\n    if (feature) {\r\n      this.removeFeature(feature);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../events/Event.js\").default} evt Event.\r\n   * @private\r\n   */\r\n  handleFeatureChange_(evt) {\r\n    const feature = /** @type {import(\"../Feature.js\").default} */ (evt.target);\r\n    if (this.handlingDownUpSequence) {\r\n      const uid = getUid(feature);\r\n      if (!(uid in this.pendingFeatures_)) {\r\n        this.pendingFeatures_[uid] = feature;\r\n      }\r\n    } else {\r\n      this.updateFeature_(feature);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle pointer up events.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\r\n   * @return {boolean} If the event was consumed.\r\n   * @override\r\n   */\r\n  handleUpEvent(evt) {\r\n    const featuresToUpdate = Object.values(this.pendingFeatures_);\r\n    if (featuresToUpdate.length) {\r\n      featuresToUpdate.forEach(this.updateFeature_.bind(this));\r\n      this.pendingFeatures_ = {};\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Remove a feature from the collection of features that we may snap to.\r\n   * @param {import(\"../Feature.js\").default} feature Feature\r\n   * @param {boolean} [unlisten] Whether to unlisten to the feature change\r\n   *     or not. Defaults to `true`.\r\n   * @api\r\n   */\r\n  removeFeature(feature, unlisten) {\r\n    const unregister = unlisten !== undefined ? unlisten : true;\r\n    const feature_uid = getUid(feature);\r\n    const extent = this.indexedFeaturesExtents_[feature_uid];\r\n    if (extent) {\r\n      const rBush = this.rBush_;\r\n      const nodesToRemove = [];\r\n      rBush.forEachInExtent(extent, function (node) {\r\n        if (feature === node.feature) {\r\n          nodesToRemove.push(node);\r\n        }\r\n      });\r\n      for (let i = nodesToRemove.length - 1; i >= 0; --i) {\r\n        rBush.remove(nodesToRemove[i]);\r\n      }\r\n    }\r\n\r\n    if (unregister) {\r\n      unlistenByKey(this.featureChangeListenerKeys_[feature_uid]);\r\n      delete this.featureChangeListenerKeys_[feature_uid];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Remove the interaction from its current map and attach it to the new map.\r\n   * Subclasses may set up event handlers to get notified about changes to\r\n   * the map here.\r\n   * @param {import(\"../Map.js\").default} map Map.\r\n   * @override\r\n   */\r\n  setMap(map) {\r\n    const currentMap = this.getMap();\r\n    const keys = this.featuresListenerKeys_;\r\n    const features = /** @type {Array<import(\"../Feature.js\").default>} */ (\r\n      this.getFeatures_()\r\n    );\r\n\r\n    if (currentMap) {\r\n      keys.forEach(unlistenByKey);\r\n      keys.length = 0;\r\n      this.rBush_.clear();\r\n      Object.values(this.featureChangeListenerKeys_).forEach(unlistenByKey);\r\n      this.featureChangeListenerKeys_ = {};\r\n    }\r\n    super.setMap(map);\r\n\r\n    if (map) {\r\n      if (this.features_) {\r\n        keys.push(\r\n          listen(\r\n            this.features_,\r\n            CollectionEventType.ADD,\r\n            this.handleFeatureAdd_,\r\n            this,\r\n          ),\r\n          listen(\r\n            this.features_,\r\n            CollectionEventType.REMOVE,\r\n            this.handleFeatureRemove_,\r\n            this,\r\n          ),\r\n        );\r\n      } else if (this.source_) {\r\n        keys.push(\r\n          listen(\r\n            this.source_,\r\n            VectorEventType.ADDFEATURE,\r\n            this.handleFeatureAdd_,\r\n            this,\r\n          ),\r\n          listen(\r\n            this.source_,\r\n            VectorEventType.REMOVEFEATURE,\r\n            this.handleFeatureRemove_,\r\n            this,\r\n          ),\r\n        );\r\n      }\r\n      features.forEach((feature) => this.addFeature(feature));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel\r\n   * @param {import(\"../coordinate.js\").Coordinate} pixelCoordinate Coordinate\r\n   * @param {import(\"../Map.js\").default} map Map.\r\n   * @return {Result|null} Snap result\r\n   */\r\n  snapTo(pixel, pixelCoordinate, map) {\r\n    const projection = map.getView().getProjection();\r\n    const projectedCoordinate = fromUserCoordinate(pixelCoordinate, projection);\r\n\r\n    const box = toUserExtent(\r\n      buffer(\r\n        boundingExtent([projectedCoordinate]),\r\n        map.getView().getResolution() * this.pixelTolerance_,\r\n      ),\r\n      projection,\r\n    );\r\n\r\n    const segments = this.rBush_.getInExtent(box);\r\n    const segmentsLength = segments.length;\r\n    if (segmentsLength === 0) {\r\n      return null;\r\n    }\r\n\r\n    let closestVertex;\r\n    let minSquaredDistance = Infinity;\r\n    let closestFeature;\r\n    let closestSegment = null;\r\n\r\n    const squaredPixelTolerance = this.pixelTolerance_ * this.pixelTolerance_;\r\n    const getResult = () => {\r\n      if (closestVertex) {\r\n        const vertexPixel = map.getPixelFromCoordinate(closestVertex);\r\n        const squaredPixelDistance = squaredDistance(pixel, vertexPixel);\r\n        if (squaredPixelDistance <= squaredPixelTolerance) {\r\n          return {\r\n            vertex: closestVertex,\r\n            vertexPixel: [\r\n              Math.round(vertexPixel[0]),\r\n              Math.round(vertexPixel[1]),\r\n            ],\r\n            feature: closestFeature,\r\n            segment: closestSegment,\r\n          };\r\n        }\r\n      }\r\n      return null;\r\n    };\r\n\r\n    if (this.vertex_) {\r\n      for (let i = 0; i < segmentsLength; ++i) {\r\n        const segmentData = segments[i];\r\n        if (segmentData.feature.getGeometry().getType() !== 'Circle') {\r\n          segmentData.segment.forEach((vertex) => {\r\n            const tempVertexCoord = fromUserCoordinate(vertex, projection);\r\n            const delta = squaredDistance(projectedCoordinate, tempVertexCoord);\r\n            if (delta < minSquaredDistance) {\r\n              closestVertex = vertex;\r\n              minSquaredDistance = delta;\r\n              closestFeature = segmentData.feature;\r\n            }\r\n          });\r\n        }\r\n      }\r\n      const result = getResult();\r\n      if (result) {\r\n        return result;\r\n      }\r\n    }\r\n\r\n    if (this.edge_) {\r\n      for (let i = 0; i < segmentsLength; ++i) {\r\n        let vertex = null;\r\n        const segmentData = segments[i];\r\n        if (segmentData.feature.getGeometry().getType() === 'Circle') {\r\n          let circleGeometry = segmentData.feature.getGeometry();\r\n          const userProjection = getUserProjection();\r\n          if (userProjection) {\r\n            circleGeometry = circleGeometry\r\n              .clone()\r\n              .transform(userProjection, projection);\r\n          }\r\n          vertex = closestOnCircle(\r\n            projectedCoordinate,\r\n            /** @type {import(\"../geom/Circle.js\").default} */ (circleGeometry),\r\n          );\r\n        } else {\r\n          const [segmentStart, segmentEnd] = segmentData.segment;\r\n          // points have only one coordinate\r\n          if (segmentEnd) {\r\n            tempSegment[0] = fromUserCoordinate(segmentStart, projection);\r\n            tempSegment[1] = fromUserCoordinate(segmentEnd, projection);\r\n            vertex = closestOnSegment(projectedCoordinate, tempSegment);\r\n          }\r\n        }\r\n        if (vertex) {\r\n          const delta = squaredDistance(projectedCoordinate, vertex);\r\n          if (delta < minSquaredDistance) {\r\n            closestVertex = toUserCoordinate(vertex, projection);\r\n            closestSegment =\r\n              segmentData.feature.getGeometry().getType() === 'Circle'\r\n                ? null\r\n                : segmentData.segment;\r\n            minSquaredDistance = delta;\r\n            closestFeature = segmentData.feature;\r\n          }\r\n        }\r\n      }\r\n\r\n      const result = getResult();\r\n      if (result) {\r\n        return result;\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../Feature.js\").default} feature Feature\r\n   * @private\r\n   */\r\n  updateFeature_(feature) {\r\n    this.removeFeature(feature, false);\r\n    this.addFeature(feature, false);\r\n  }\r\n\r\n  /**\r\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\r\n   * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\r\n   * @private\r\n   */\r\n  segmentCircleGeometry_(segments, geometry) {\r\n    const projection = this.getMap().getView().getProjection();\r\n    let circleGeometry = geometry;\r\n    const userProjection = getUserProjection();\r\n    if (userProjection) {\r\n      circleGeometry = circleGeometry\r\n        .clone()\r\n        .transform(userProjection, projection);\r\n    }\r\n    const polygon = fromCircle(circleGeometry);\r\n    if (userProjection) {\r\n      polygon.transform(projection, userProjection);\r\n    }\r\n    const coordinates = polygon.getCoordinates()[0];\r\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\r\n      segments.push(coordinates.slice(i, i + 2));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\r\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\r\n   * @private\r\n   */\r\n  segmentGeometryCollectionGeometry_(segments, geometry) {\r\n    const geometries = geometry.getGeometriesArray();\r\n    for (let i = 0; i < geometries.length; ++i) {\r\n      const segmenter = this.GEOMETRY_SEGMENTERS_[geometries[i].getType()];\r\n      if (segmenter) {\r\n        segmenter(segments, geometries[i]);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\r\n   * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\r\n   * @private\r\n   */\r\n  segmentLineStringGeometry_(segments, geometry) {\r\n    const coordinates = geometry.getCoordinates();\r\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\r\n      segments.push(coordinates.slice(i, i + 2));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\r\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\r\n   * @private\r\n   */\r\n  segmentMultiLineStringGeometry_(segments, geometry) {\r\n    const lines = geometry.getCoordinates();\r\n    for (let j = 0, jj = lines.length; j < jj; ++j) {\r\n      const coordinates = lines[j];\r\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\r\n        segments.push(coordinates.slice(i, i + 2));\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\r\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\r\n   * @private\r\n   */\r\n  segmentMultiPointGeometry_(segments, geometry) {\r\n    geometry.getCoordinates().forEach((point) => {\r\n      segments.push([point]);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\r\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\r\n   * @private\r\n   */\r\n  segmentMultiPolygonGeometry_(segments, geometry) {\r\n    const polygons = geometry.getCoordinates();\r\n    for (let k = 0, kk = polygons.length; k < kk; ++k) {\r\n      const rings = polygons[k];\r\n      for (let j = 0, jj = rings.length; j < jj; ++j) {\r\n        const coordinates = rings[j];\r\n        for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\r\n          segments.push(coordinates.slice(i, i + 2));\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\r\n   * @param {import(\"../geom/Point.js\").default} geometry Geometry.\r\n   * @private\r\n   */\r\n  segmentPointGeometry_(segments, geometry) {\r\n    segments.push([geometry.getCoordinates()]);\r\n  }\r\n\r\n  /**\r\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\r\n   * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\r\n   * @private\r\n   */\r\n  segmentPolygonGeometry_(segments, geometry) {\r\n    const rings = geometry.getCoordinates();\r\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\r\n      const coordinates = rings[j];\r\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\r\n        segments.push(coordinates.slice(i, i + 2));\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default Snap;\r\n", "/**\r\n * @module ol/interaction/Translate\r\n */\r\nimport Collection from '../Collection.js';\r\nimport Event from '../events/Event.js';\r\nimport Feature from '../Feature.js';\r\nimport InteractionProperty from './Property.js';\r\nimport PointerInteraction from './Pointer.js';\r\nimport {TRUE} from '../functions.js';\r\nimport {always} from '../events/condition.js';\r\nimport {fromUserCoordinate, getUserProjection} from '../proj.js';\r\n\r\n/**\r\n * @enum {string}\r\n */\r\nconst TranslateEventType = {\r\n  /**\r\n   * Triggered upon feature translation start.\r\n   * @event TranslateEvent#translatestart\r\n   * @api\r\n   */\r\n  TRANSLATESTART: 'translatestart',\r\n  /**\r\n   * Triggered upon feature translation.\r\n   * @event TranslateEvent#translating\r\n   * @api\r\n   */\r\n  TRANSLATING: 'translating',\r\n  /**\r\n   * Triggered upon feature translation end.\r\n   * @event TranslateEvent#translateend\r\n   * @api\r\n   */\r\n  TRANSLATEEND: 'translateend',\r\n};\r\n\r\n/**\r\n * A function that takes a {@link module:ol/Feature~Feature} or\r\n * {@link module:ol/render/Feature~RenderFeature} and a\r\n * {@link module:ol/layer/Layer~Layer} and returns `true` if the feature may be\r\n * translated or `false` otherwise.\r\n * @typedef {function(Feature, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>):boolean} FilterFunction\r\n */\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\r\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\r\n * boolean to indicate whether that event should be handled.\r\n * Default is {@link module:ol/events/condition.always}.\r\n * @property {Collection<Feature>} [features] Features contained in this collection will be able to be translated together.\r\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} [layers] A list of layers from which features should be\r\n * translated. Alternatively, a filter function can be provided. The\r\n * function will be called for each layer in the map and should return\r\n * `true` for layers that you want to be translatable. If the option is\r\n * absent, all visible layers will be considered translatable.\r\n * Not used if `features` is provided.\r\n * @property {FilterFunction} [filter] A function\r\n * that takes a {@link module:ol/Feature~Feature} and an\r\n * {@link module:ol/layer/Layer~Layer} and returns `true` if the feature may be\r\n * translated or `false` otherwise. Not used if `features` is provided.\r\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside the radius around the given position\r\n * will be checked for features.\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Events emitted by {@link module:ol/interaction/Translate~Translate} instances\r\n * are instances of this type.\r\n */\r\nexport class TranslateEvent extends Event {\r\n  /**\r\n   * @param {TranslateEventType} type Type.\r\n   * @param {Collection<Feature>} features The features translated.\r\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\r\n   * @param {import(\"../coordinate.js\").Coordinate} startCoordinate The original coordinates before.translation started\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n   */\r\n  constructor(type, features, coordinate, startCoordinate, mapBrowserEvent) {\r\n    super(type);\r\n\r\n    /**\r\n     * The features being translated.\r\n     * @type {Collection<Feature>}\r\n     * @api\r\n     */\r\n    this.features = features;\r\n\r\n    /**\r\n     * The coordinate of the drag event.\r\n     * @const\r\n     * @type {import(\"../coordinate.js\").Coordinate}\r\n     * @api\r\n     */\r\n    this.coordinate = coordinate;\r\n\r\n    /**\r\n     * The coordinate of the start position before translation started.\r\n     * @const\r\n     * @type {import(\"../coordinate.js\").Coordinate}\r\n     * @api\r\n     */\r\n    this.startCoordinate = startCoordinate;\r\n\r\n    /**\r\n     * Associated {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\r\n     * @type {import(\"../MapBrowserEvent.js\").default}\r\n     * @api\r\n     */\r\n    this.mapBrowserEvent = mapBrowserEvent;\r\n  }\r\n}\r\n\r\n/***\r\n * @template Return\r\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\r\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\r\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\r\n *   import(\"../Observable\").OnSignature<'translateend'|'translatestart'|'translating', TranslateEvent, Return> &\r\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\r\n *     'change:active'|'translateend'|'translatestart'|'translating', Return>} TranslateOnSignature\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Interaction for translating (moving) features.\r\n * If you want to translate multiple features in a single action (for example,\r\n * the collection used by a select interaction), construct the interaction with\r\n * the `features` option.\r\n *\r\n * @fires TranslateEvent\r\n * @api\r\n */\r\nclass Translate extends PointerInteraction {\r\n  /**\r\n   * @param {Options} [options] Options.\r\n   */\r\n  constructor(options) {\r\n    options = options ? options : {};\r\n\r\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\r\n\r\n    /***\r\n     * @type {TranslateOnSignature<import(\"../events\").EventsKey>}\r\n     */\r\n    this.on;\r\n\r\n    /***\r\n     * @type {TranslateOnSignature<import(\"../events\").EventsKey>}\r\n     */\r\n    this.once;\r\n\r\n    /***\r\n     * @type {TranslateOnSignature<void>}\r\n     */\r\n    this.un;\r\n\r\n    /**\r\n     * The last position we translated to.\r\n     * @type {import(\"../coordinate.js\").Coordinate}\r\n     * @private\r\n     */\r\n    this.lastCoordinate_ = null;\r\n\r\n    /**\r\n     * The start position before translation started.\r\n     * @type {import(\"../coordinate.js\").Coordinate}\r\n     * @private\r\n     */\r\n    this.startCoordinate_ = null;\r\n\r\n    /**\r\n     * @type {Collection<Feature>|null}\r\n     * @private\r\n     */\r\n    this.features_ = options.features !== undefined ? options.features : null;\r\n\r\n    /** @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} */\r\n    let layerFilter;\r\n    if (options.layers && !this.features_) {\r\n      if (typeof options.layers === 'function') {\r\n        layerFilter = options.layers;\r\n      } else {\r\n        const layers = options.layers;\r\n        layerFilter = function (layer) {\r\n          return layers.includes(layer);\r\n        };\r\n      }\r\n    } else {\r\n      layerFilter = TRUE;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean}\r\n     */\r\n    this.layerFilter_ = layerFilter;\r\n\r\n    /**\r\n     * @private\r\n     * @type {FilterFunction}\r\n     */\r\n    this.filter_ = options.filter && !this.features_ ? options.filter : TRUE;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../events/condition.js\").Condition}\r\n     */\r\n    this.condition_ = options.condition ? options.condition : always;\r\n\r\n    /**\r\n     * @type {Feature}\r\n     * @private\r\n     */\r\n    this.lastFeature_ = null;\r\n\r\n    this.addChangeListener(\r\n      InteractionProperty.ACTIVE,\r\n      this.handleActiveChanged_,\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Handle pointer down events.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\r\n   * @return {boolean} If the event was consumed.\r\n   * @override\r\n   */\r\n  handleDownEvent(event) {\r\n    if (!event.originalEvent || !this.condition_(event)) {\r\n      return false;\r\n    }\r\n    this.lastFeature_ = this.featuresAtPixel_(event.pixel, event.map);\r\n    if (!this.lastCoordinate_ && this.lastFeature_) {\r\n      this.startCoordinate_ = event.coordinate;\r\n      this.lastCoordinate_ = event.coordinate;\r\n      this.handleMoveEvent(event);\r\n\r\n      const features = this.features_ || new Collection([this.lastFeature_]);\r\n\r\n      this.dispatchEvent(\r\n        new TranslateEvent(\r\n          TranslateEventType.TRANSLATESTART,\r\n          features,\r\n          event.coordinate,\r\n          this.startCoordinate_,\r\n          event,\r\n        ),\r\n      );\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Handle pointer up events.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\r\n   * @return {boolean} If the event was consumed.\r\n   * @override\r\n   */\r\n  handleUpEvent(event) {\r\n    if (this.lastCoordinate_) {\r\n      this.lastCoordinate_ = null;\r\n      this.handleMoveEvent(event);\r\n\r\n      const features = this.features_ || new Collection([this.lastFeature_]);\r\n\r\n      this.dispatchEvent(\r\n        new TranslateEvent(\r\n          TranslateEventType.TRANSLATEEND,\r\n          features,\r\n          event.coordinate,\r\n          this.startCoordinate_,\r\n          event,\r\n        ),\r\n      );\r\n      // cleanup\r\n      this.startCoordinate_ = null;\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Handle pointer drag events.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\r\n   * @override\r\n   */\r\n  handleDragEvent(event) {\r\n    if (this.lastCoordinate_) {\r\n      const newCoordinate = event.coordinate;\r\n      const projection = event.map.getView().getProjection();\r\n\r\n      const newViewCoordinate = fromUserCoordinate(newCoordinate, projection);\r\n      const lastViewCoordinate = fromUserCoordinate(\r\n        this.lastCoordinate_,\r\n        projection,\r\n      );\r\n      const deltaX = newViewCoordinate[0] - lastViewCoordinate[0];\r\n      const deltaY = newViewCoordinate[1] - lastViewCoordinate[1];\r\n\r\n      const features = this.features_ || new Collection([this.lastFeature_]);\r\n      const userProjection = getUserProjection();\r\n\r\n      features.forEach(function (feature) {\r\n        const geom = feature.getGeometry();\r\n        if (userProjection) {\r\n          geom.transform(userProjection, projection);\r\n          geom.translate(deltaX, deltaY);\r\n          geom.transform(projection, userProjection);\r\n        } else {\r\n          geom.translate(deltaX, deltaY);\r\n        }\r\n        feature.setGeometry(geom);\r\n      });\r\n\r\n      this.lastCoordinate_ = newCoordinate;\r\n\r\n      this.dispatchEvent(\r\n        new TranslateEvent(\r\n          TranslateEventType.TRANSLATING,\r\n          features,\r\n          newCoordinate,\r\n          this.startCoordinate_,\r\n          event,\r\n        ),\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle pointer move events.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\r\n   * @override\r\n   */\r\n  handleMoveEvent(event) {\r\n    const elem = event.map.getViewport();\r\n\r\n    // Change the cursor to grab/grabbing if hovering any of the features managed\r\n    // by the interaction\r\n    if (this.featuresAtPixel_(event.pixel, event.map)) {\r\n      elem.classList.remove(this.lastCoordinate_ ? 'ol-grab' : 'ol-grabbing');\r\n      elem.classList.add(this.lastCoordinate_ ? 'ol-grabbing' : 'ol-grab');\r\n    } else {\r\n      elem.classList.remove('ol-grab', 'ol-grabbing');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Tests to see if the given coordinates intersects any of our selected\r\n   * features.\r\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel coordinate to test for intersection.\r\n   * @param {import(\"../Map.js\").default} map Map to test the intersection on.\r\n   * @return {Feature} Returns the feature found at the specified pixel\r\n   * coordinates.\r\n   * @private\r\n   */\r\n  featuresAtPixel_(pixel, map) {\r\n    return map.forEachFeatureAtPixel(\r\n      pixel,\r\n      (feature, layer) => {\r\n        if (!(feature instanceof Feature) || !this.filter_(feature, layer)) {\r\n          return undefined;\r\n        }\r\n        if (this.features_ && !this.features_.getArray().includes(feature)) {\r\n          return undefined;\r\n        }\r\n        return feature;\r\n      },\r\n      {\r\n        layerFilter: this.layerFilter_,\r\n        hitTolerance: this.hitTolerance_,\r\n      },\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Returns the Hit-detection tolerance.\r\n   * @return {number} Hit tolerance in pixels.\r\n   * @api\r\n   */\r\n  getHitTolerance() {\r\n    return this.hitTolerance_;\r\n  }\r\n\r\n  /**\r\n   * Hit-detection tolerance. Pixels inside the radius around the given position\r\n   * will be checked for features.\r\n   * @param {number} hitTolerance Hit tolerance in pixels.\r\n   * @api\r\n   */\r\n  setHitTolerance(hitTolerance) {\r\n    this.hitTolerance_ = hitTolerance;\r\n  }\r\n\r\n  /**\r\n   * Remove the interaction from its current map and attach it to the new map.\r\n   * Subclasses may set up event handlers to get notified about changes to\r\n   * the map here.\r\n   * @param {import(\"../Map.js\").default} map Map.\r\n   * @override\r\n   */\r\n  setMap(map) {\r\n    const oldMap = this.getMap();\r\n    super.setMap(map);\r\n    this.updateState_(oldMap);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  handleActiveChanged_() {\r\n    this.updateState_(null);\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../Map.js\").default} oldMap Old map.\r\n   * @private\r\n   */\r\n  updateState_(oldMap) {\r\n    let map = this.getMap();\r\n    const active = this.getActive();\r\n    if (!map || !active) {\r\n      map = map || oldMap;\r\n      if (map) {\r\n        const elem = map.getViewport();\r\n        elem.classList.remove('ol-grab', 'ol-grabbing');\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default Translate;\r\n"],
  "mappings": "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",
  "names": ["distance", "Vector_default", "layer"]
}
